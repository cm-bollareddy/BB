//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace TestWebService.BVWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BVWebServiceSoap", Namespace="http://pbswebservice.broadviewsoftware.com/BVWebService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserProfileBase))]
    public partial class BVWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOACOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutOACOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOACOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIWTOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutIWTOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteIWTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUCCOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutUCCOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUCCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdCopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutAdCopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutAdCopy1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeatureMediaInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutFeatureMediaInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaInventoryRevisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutMediaInventoryRevisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssetAppliesToRangeByTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutAssetAppliesToRangeByTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageAppliesToRangeByTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutPackageAppliesToRangeByTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListTabMapByDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListPAADeadlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListFormDeadlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMissingEpisodeFormDeadlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMissingVersionFormDeadlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiscrepancyProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DebugTimeOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealWithFundingOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutDealWithFundingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealWithGeneralOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutDealWithGeneralOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealWithRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutDealWithRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealWithTechnicalOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutDealWithTechnicalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMediaInventoryRevisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBarCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgramSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterDealSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaInventorySearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrafficItemSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdCopySearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateEpisodeSlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadBillToOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadBillToContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCaptionVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadContactTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDisclaimerOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDistributorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFundersOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFunderTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadGenreOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadKeywordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLocalUnderwritingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPBSProgramTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPlayRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProgramTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSchoolRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadUplinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadVersionFormatAndTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAudioTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTalentRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSurroundSoundTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAspectRatioTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAssetCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadHighDefTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadVideoFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMediaFeatureClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCutItemTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMediaFormatTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMediaInventoryTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMediaStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMediaFeatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPackageTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOacPreOfferDescriptionTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOacPostOfferDescriptionTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadVChipValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAlliantContractModelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadStationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListProgramByDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListProgramPackagesByProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListDealsByMasterDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutProgramDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTalentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutTalentOperationCompleted;
        
        private System.Threading.SendOrPostCallback TalentSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormatSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutFormatSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormatSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicCueOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutMusicCueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMusicCueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVisualArtOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutVisualArtOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVisualArtOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BVWebService() {
            this.Url = "http://localhost/BVWebService/Service.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOACCompletedEventHandler GetOACCompleted;
        
        /// <remarks/>
        public event PutOACCompletedEventHandler PutOACCompleted;
        
        /// <remarks/>
        public event DeleteOACCompletedEventHandler DeleteOACCompleted;
        
        /// <remarks/>
        public event GetIWTCompletedEventHandler GetIWTCompleted;
        
        /// <remarks/>
        public event PutIWTCompletedEventHandler PutIWTCompleted;
        
        /// <remarks/>
        public event DeleteIWTCompletedEventHandler DeleteIWTCompleted;
        
        /// <remarks/>
        public event GetUCCCompletedEventHandler GetUCCCompleted;
        
        /// <remarks/>
        public event PutUCCCompletedEventHandler PutUCCCompleted;
        
        /// <remarks/>
        public event DeleteUCCCompletedEventHandler DeleteUCCCompleted;
        
        /// <remarks/>
        public event GetAdCopyCompletedEventHandler GetAdCopyCompleted;
        
        /// <remarks/>
        public event PutAdCopyCompletedEventHandler PutAdCopyCompleted;
        
        /// <remarks/>
        public event PutAdCopy1CompletedEventHandler PutAdCopy1Completed;
        
        /// <remarks/>
        public event GetPackageCompletedEventHandler GetPackageCompleted;
        
        /// <remarks/>
        public event GetFeatureMediaInventoryCompletedEventHandler GetFeatureMediaInventoryCompleted;
        
        /// <remarks/>
        public event PutFeatureMediaInventoryCompletedEventHandler PutFeatureMediaInventoryCompleted;
        
        /// <remarks/>
        public event GetMediaInventoryRevisionCompletedEventHandler GetMediaInventoryRevisionCompleted;
        
        /// <remarks/>
        public event PutMediaInventoryRevisionCompletedEventHandler PutMediaInventoryRevisionCompleted;
        
        /// <remarks/>
        public event GetAssetAppliesToRangeByTabCompletedEventHandler GetAssetAppliesToRangeByTabCompleted;
        
        /// <remarks/>
        public event PutAssetAppliesToRangeByTabCompletedEventHandler PutAssetAppliesToRangeByTabCompleted;
        
        /// <remarks/>
        public event GetPackageAppliesToRangeByTabCompletedEventHandler GetPackageAppliesToRangeByTabCompleted;
        
        /// <remarks/>
        public event PutPackageAppliesToRangeByTabCompletedEventHandler PutPackageAppliesToRangeByTabCompleted;
        
        /// <remarks/>
        public event ListTabMapByDealCompletedEventHandler ListTabMapByDealCompleted;
        
        /// <remarks/>
        public event ListPAADeadlineCompletedEventHandler ListPAADeadlineCompleted;
        
        /// <remarks/>
        public event ListFormDeadlineCompletedEventHandler ListFormDeadlineCompleted;
        
        /// <remarks/>
        public event ListMissingEpisodeFormDeadlineCompletedEventHandler ListMissingEpisodeFormDeadlineCompleted;
        
        /// <remarks/>
        public event ListMissingVersionFormDeadlineCompletedEventHandler ListMissingVersionFormDeadlineCompleted;
        
        /// <remarks/>
        public event GetDiscrepancyProgramCompletedEventHandler GetDiscrepancyProgramCompleted;
        
        /// <remarks/>
        public event ReleaseLockCompletedEventHandler ReleaseLockCompleted;
        
        /// <remarks/>
        public event GetIDsCompletedEventHandler GetIDsCompleted;
        
        /// <remarks/>
        public event OpenSessionCompletedEventHandler OpenSessionCompleted;
        
        /// <remarks/>
        public event CloseSessionCompletedEventHandler CloseSessionCompleted;
        
        /// <remarks/>
        public event DebugTimeOutCompletedEventHandler DebugTimeOutCompleted;
        
        /// <remarks/>
        public event GetDealCompletedEventHandler GetDealCompleted;
        
        /// <remarks/>
        public event PutDealCompletedEventHandler PutDealCompleted;
        
        /// <remarks/>
        public event CreateDealCompletedEventHandler CreateDealCompleted;
        
        /// <remarks/>
        public event GetDealAllCompletedEventHandler GetDealAllCompleted;
        
        /// <remarks/>
        public event GetDealWithFundingCompletedEventHandler GetDealWithFundingCompleted;
        
        /// <remarks/>
        public event PutDealWithFundingCompletedEventHandler PutDealWithFundingCompleted;
        
        /// <remarks/>
        public event GetDealWithGeneralCompletedEventHandler GetDealWithGeneralCompleted;
        
        /// <remarks/>
        public event PutDealWithGeneralCompletedEventHandler PutDealWithGeneralCompleted;
        
        /// <remarks/>
        public event GetDealWithRightsCompletedEventHandler GetDealWithRightsCompleted;
        
        /// <remarks/>
        public event PutDealWithRightsCompletedEventHandler PutDealWithRightsCompleted;
        
        /// <remarks/>
        public event GetDealWithTechnicalCompletedEventHandler GetDealWithTechnicalCompleted;
        
        /// <remarks/>
        public event PutDealWithTechnicalCompletedEventHandler PutDealWithTechnicalCompleted;
        
        /// <remarks/>
        public event GetMasterDealCompletedEventHandler GetMasterDealCompleted;
        
        /// <remarks/>
        public event CreateMediaInventoryRevisionCompletedEventHandler CreateMediaInventoryRevisionCompleted;
        
        /// <remarks/>
        public event GetBarCodeCompletedEventHandler GetBarCodeCompleted;
        
        /// <remarks/>
        public event DealSearchCompletedEventHandler DealSearchCompleted;
        
        /// <remarks/>
        public event ProgramSearchCompletedEventHandler ProgramSearchCompleted;
        
        /// <remarks/>
        public event MasterDealSearchCompletedEventHandler MasterDealSearchCompleted;
        
        /// <remarks/>
        public event MediaInventorySearchCompletedEventHandler MediaInventorySearchCompleted;
        
        /// <remarks/>
        public event TrafficItemSearchCompletedEventHandler TrafficItemSearchCompleted;
        
        /// <remarks/>
        public event AdCopySearchCompletedEventHandler AdCopySearchCompleted;
        
        /// <remarks/>
        public event ValidateEpisodeSlateCompletedEventHandler ValidateEpisodeSlateCompleted;
        
        /// <remarks/>
        public event LoadBillToCompletedEventHandler LoadBillToCompleted;
        
        /// <remarks/>
        public event LoadBillToContactCompletedEventHandler LoadBillToContactCompleted;
        
        /// <remarks/>
        public event LoadCaptionVendorCompletedEventHandler LoadCaptionVendorCompleted;
        
        /// <remarks/>
        public event LoadCompanyCompletedEventHandler LoadCompanyCompleted;
        
        /// <remarks/>
        public event LoadContactTypeCompletedEventHandler LoadContactTypeCompleted;
        
        /// <remarks/>
        public event LoadDisclaimerCompletedEventHandler LoadDisclaimerCompleted;
        
        /// <remarks/>
        public event LoadDistributorsCompletedEventHandler LoadDistributorsCompleted;
        
        /// <remarks/>
        public event LoadFundersCompletedEventHandler LoadFundersCompleted;
        
        /// <remarks/>
        public event LoadFunderTypeCompletedEventHandler LoadFunderTypeCompleted;
        
        /// <remarks/>
        public event LoadGenreCompletedEventHandler LoadGenreCompleted;
        
        /// <remarks/>
        public event LoadKeywordsCompletedEventHandler LoadKeywordsCompleted;
        
        /// <remarks/>
        public event LoadLanguageCompletedEventHandler LoadLanguageCompleted;
        
        /// <remarks/>
        public event LoadLocalUnderwritingCompletedEventHandler LoadLocalUnderwritingCompleted;
        
        /// <remarks/>
        public event LoadPBSProgramTypeCompletedEventHandler LoadPBSProgramTypeCompleted;
        
        /// <remarks/>
        public event LoadPlayRuleCompletedEventHandler LoadPlayRuleCompleted;
        
        /// <remarks/>
        public event LoadProgramTypeCompletedEventHandler LoadProgramTypeCompleted;
        
        /// <remarks/>
        public event LoadRatingCompletedEventHandler LoadRatingCompleted;
        
        /// <remarks/>
        public event LoadSchoolRightsCompletedEventHandler LoadSchoolRightsCompleted;
        
        /// <remarks/>
        public event LoadUplinksCompletedEventHandler LoadUplinksCompleted;
        
        /// <remarks/>
        public event LoadVersionFormatAndTypeCompletedEventHandler LoadVersionFormatAndTypeCompleted;
        
        /// <remarks/>
        public event LoadAudioTypeCompletedEventHandler LoadAudioTypeCompleted;
        
        /// <remarks/>
        public event LoadTalentRolesCompletedEventHandler LoadTalentRolesCompleted;
        
        /// <remarks/>
        public event LoadSurroundSoundTypeCompletedEventHandler LoadSurroundSoundTypeCompleted;
        
        /// <remarks/>
        public event LoadAspectRatioTypeCompletedEventHandler LoadAspectRatioTypeCompleted;
        
        /// <remarks/>
        public event LoadAssetCategoryCompletedEventHandler LoadAssetCategoryCompleted;
        
        /// <remarks/>
        public event LoadHighDefTypeCompletedEventHandler LoadHighDefTypeCompleted;
        
        /// <remarks/>
        public event LoadVideoFormatCompletedEventHandler LoadVideoFormatCompleted;
        
        /// <remarks/>
        public event LoadMediaFeatureClassCompletedEventHandler LoadMediaFeatureClassCompleted;
        
        /// <remarks/>
        public event LoadCutItemTypeCompletedEventHandler LoadCutItemTypeCompleted;
        
        /// <remarks/>
        public event LoadMediaFormatTypeCompletedEventHandler LoadMediaFormatTypeCompleted;
        
        /// <remarks/>
        public event LoadMediaInventoryTypeCompletedEventHandler LoadMediaInventoryTypeCompleted;
        
        /// <remarks/>
        public event LoadMediaStatusCompletedEventHandler LoadMediaStatusCompleted;
        
        /// <remarks/>
        public event LoadMediaFeatureCompletedEventHandler LoadMediaFeatureCompleted;
        
        /// <remarks/>
        public event LoadPackageTypeCompletedEventHandler LoadPackageTypeCompleted;
        
        /// <remarks/>
        public event LoadOacPreOfferDescriptionTypeCompletedEventHandler LoadOacPreOfferDescriptionTypeCompleted;
        
        /// <remarks/>
        public event LoadOacPostOfferDescriptionTypeCompletedEventHandler LoadOacPostOfferDescriptionTypeCompleted;
        
        /// <remarks/>
        public event LoadVChipValuesCompletedEventHandler LoadVChipValuesCompleted;
        
        /// <remarks/>
        public event LoadAlliantContractModelsCompletedEventHandler LoadAlliantContractModelsCompleted;
        
        /// <remarks/>
        public event LoadStationsCompletedEventHandler LoadStationsCompleted;
        
        /// <remarks/>
        public event CreateProgramCompletedEventHandler CreateProgramCompleted;
        
        /// <remarks/>
        public event ListProgramByDealCompletedEventHandler ListProgramByDealCompleted;
        
        /// <remarks/>
        public event ListProgramPackagesByProgramCompletedEventHandler ListProgramPackagesByProgramCompleted;
        
        /// <remarks/>
        public event ListDealsByMasterDealCompletedEventHandler ListDealsByMasterDealCompleted;
        
        /// <remarks/>
        public event GetProgramDetailsCompletedEventHandler GetProgramDetailsCompleted;
        
        /// <remarks/>
        public event PutProgramDetailsCompletedEventHandler PutProgramDetailsCompleted;
        
        /// <remarks/>
        public event GetTalentCompletedEventHandler GetTalentCompleted;
        
        /// <remarks/>
        public event PutTalentCompletedEventHandler PutTalentCompleted;
        
        /// <remarks/>
        public event TalentSearchCompletedEventHandler TalentSearchCompleted;
        
        /// <remarks/>
        public event GetFormatSheetCompletedEventHandler GetFormatSheetCompleted;
        
        /// <remarks/>
        public event PutFormatSheetCompletedEventHandler PutFormatSheetCompleted;
        
        /// <remarks/>
        public event DeleteFormatSheetCompletedEventHandler DeleteFormatSheetCompleted;
        
        /// <remarks/>
        public event GetMusicCueCompletedEventHandler GetMusicCueCompleted;
        
        /// <remarks/>
        public event PutMusicCueCompletedEventHandler PutMusicCueCompleted;
        
        /// <remarks/>
        public event DeleteMusicCueCompletedEventHandler DeleteMusicCueCompleted;
        
        /// <remarks/>
        public event GetVisualArtCompletedEventHandler GetVisualArtCompleted;
        
        /// <remarks/>
        public event PutVisualArtCompletedEventHandler PutVisualArtCompleted;
        
        /// <remarks/>
        public event DeleteVisualArtCompletedEventHandler DeleteVisualArtCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetOAC", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOAC(string strSessionID, int nOACID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetOAC", new object[] {
                        strSessionID,
                        nOACID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOAC(string strSessionID, int nOACID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOAC", new object[] {
                        strSessionID,
                        nOACID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOAC(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOACAsync(string strSessionID, int nOACID, bool bLockFlag) {
            this.GetOACAsync(strSessionID, nOACID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetOACAsync(string strSessionID, int nOACID, bool bLockFlag, object userState) {
            if ((this.GetOACOperationCompleted == null)) {
                this.GetOACOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOACOperationCompleted);
            }
            this.InvokeAsync("GetOAC", new object[] {
                        strSessionID,
                        nOACID,
                        bLockFlag}, this.GetOACOperationCompleted, userState);
        }
        
        private void OnGetOACOperationCompleted(object arg) {
            if ((this.GetOACCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOACCompleted(this, new GetOACCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutOAC", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutOAC(string strSessionID, string strLockID, System.Data.DataSet dsOAC) {
            this.Invoke("PutOAC", new object[] {
                        strSessionID,
                        strLockID,
                        dsOAC});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutOAC(string strSessionID, string strLockID, System.Data.DataSet dsOAC, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutOAC", new object[] {
                        strSessionID,
                        strLockID,
                        dsOAC}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutOAC(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutOACAsync(string strSessionID, string strLockID, System.Data.DataSet dsOAC) {
            this.PutOACAsync(strSessionID, strLockID, dsOAC, null);
        }
        
        /// <remarks/>
        public void PutOACAsync(string strSessionID, string strLockID, System.Data.DataSet dsOAC, object userState) {
            if ((this.PutOACOperationCompleted == null)) {
                this.PutOACOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutOACOperationCompleted);
            }
            this.InvokeAsync("PutOAC", new object[] {
                        strSessionID,
                        strLockID,
                        dsOAC}, this.PutOACOperationCompleted, userState);
        }
        
        private void OnPutOACOperationCompleted(object arg) {
            if ((this.PutOACCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutOACCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/DeleteOAC", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOAC(string strSessionID, int nTabId, string strLockId) {
            this.Invoke("DeleteOAC", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteOAC(string strSessionID, int nTabId, string strLockId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteOAC", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteOAC(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteOACAsync(string strSessionID, int nTabId, string strLockId) {
            this.DeleteOACAsync(strSessionID, nTabId, strLockId, null);
        }
        
        /// <remarks/>
        public void DeleteOACAsync(string strSessionID, int nTabId, string strLockId, object userState) {
            if ((this.DeleteOACOperationCompleted == null)) {
                this.DeleteOACOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOACOperationCompleted);
            }
            this.InvokeAsync("DeleteOAC", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, this.DeleteOACOperationCompleted, userState);
        }
        
        private void OnDeleteOACOperationCompleted(object arg) {
            if ((this.DeleteOACCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOACCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetIWT", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIWT(string strSessionID, int nIWTID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetIWT", new object[] {
                        strSessionID,
                        nIWTID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetIWT(string strSessionID, int nIWTID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetIWT", new object[] {
                        strSessionID,
                        nIWTID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetIWT(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIWTAsync(string strSessionID, int nIWTID, bool bLockFlag) {
            this.GetIWTAsync(strSessionID, nIWTID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetIWTAsync(string strSessionID, int nIWTID, bool bLockFlag, object userState) {
            if ((this.GetIWTOperationCompleted == null)) {
                this.GetIWTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIWTOperationCompleted);
            }
            this.InvokeAsync("GetIWT", new object[] {
                        strSessionID,
                        nIWTID,
                        bLockFlag}, this.GetIWTOperationCompleted, userState);
        }
        
        private void OnGetIWTOperationCompleted(object arg) {
            if ((this.GetIWTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIWTCompleted(this, new GetIWTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutIWT", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutIWT(string strSessionID, string strLockID, System.Data.DataSet dsIWT) {
            this.Invoke("PutIWT", new object[] {
                        strSessionID,
                        strLockID,
                        dsIWT});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutIWT(string strSessionID, string strLockID, System.Data.DataSet dsIWT, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutIWT", new object[] {
                        strSessionID,
                        strLockID,
                        dsIWT}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutIWT(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutIWTAsync(string strSessionID, string strLockID, System.Data.DataSet dsIWT) {
            this.PutIWTAsync(strSessionID, strLockID, dsIWT, null);
        }
        
        /// <remarks/>
        public void PutIWTAsync(string strSessionID, string strLockID, System.Data.DataSet dsIWT, object userState) {
            if ((this.PutIWTOperationCompleted == null)) {
                this.PutIWTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutIWTOperationCompleted);
            }
            this.InvokeAsync("PutIWT", new object[] {
                        strSessionID,
                        strLockID,
                        dsIWT}, this.PutIWTOperationCompleted, userState);
        }
        
        private void OnPutIWTOperationCompleted(object arg) {
            if ((this.PutIWTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutIWTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/DeleteIWT", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteIWT(string strSessionID, int nTabId, string strLockId) {
            this.Invoke("DeleteIWT", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteIWT(string strSessionID, int nTabId, string strLockId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteIWT", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteIWT(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteIWTAsync(string strSessionID, int nTabId, string strLockId) {
            this.DeleteIWTAsync(strSessionID, nTabId, strLockId, null);
        }
        
        /// <remarks/>
        public void DeleteIWTAsync(string strSessionID, int nTabId, string strLockId, object userState) {
            if ((this.DeleteIWTOperationCompleted == null)) {
                this.DeleteIWTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteIWTOperationCompleted);
            }
            this.InvokeAsync("DeleteIWT", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, this.DeleteIWTOperationCompleted, userState);
        }
        
        private void OnDeleteIWTOperationCompleted(object arg) {
            if ((this.DeleteIWTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteIWTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetUCC", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUCC(string strSessionID, int nUCCID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetUCC", new object[] {
                        strSessionID,
                        nUCCID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUCC(string strSessionID, int nUCCID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUCC", new object[] {
                        strSessionID,
                        nUCCID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUCC(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUCCAsync(string strSessionID, int nUCCID, bool bLockFlag) {
            this.GetUCCAsync(strSessionID, nUCCID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetUCCAsync(string strSessionID, int nUCCID, bool bLockFlag, object userState) {
            if ((this.GetUCCOperationCompleted == null)) {
                this.GetUCCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUCCOperationCompleted);
            }
            this.InvokeAsync("GetUCC", new object[] {
                        strSessionID,
                        nUCCID,
                        bLockFlag}, this.GetUCCOperationCompleted, userState);
        }
        
        private void OnGetUCCOperationCompleted(object arg) {
            if ((this.GetUCCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUCCCompleted(this, new GetUCCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutUCC", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutUCC(string strSessionID, string strLockID, System.Data.DataSet dsUCC) {
            this.Invoke("PutUCC", new object[] {
                        strSessionID,
                        strLockID,
                        dsUCC});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutUCC(string strSessionID, string strLockID, System.Data.DataSet dsUCC, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutUCC", new object[] {
                        strSessionID,
                        strLockID,
                        dsUCC}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutUCC(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutUCCAsync(string strSessionID, string strLockID, System.Data.DataSet dsUCC) {
            this.PutUCCAsync(strSessionID, strLockID, dsUCC, null);
        }
        
        /// <remarks/>
        public void PutUCCAsync(string strSessionID, string strLockID, System.Data.DataSet dsUCC, object userState) {
            if ((this.PutUCCOperationCompleted == null)) {
                this.PutUCCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutUCCOperationCompleted);
            }
            this.InvokeAsync("PutUCC", new object[] {
                        strSessionID,
                        strLockID,
                        dsUCC}, this.PutUCCOperationCompleted, userState);
        }
        
        private void OnPutUCCOperationCompleted(object arg) {
            if ((this.PutUCCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutUCCCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/DeleteUCC", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUCC(string strSessionID, int nTabId, string strLockId) {
            this.Invoke("DeleteUCC", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteUCC(string strSessionID, int nTabId, string strLockId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteUCC", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteUCC(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteUCCAsync(string strSessionID, int nTabId, string strLockId) {
            this.DeleteUCCAsync(strSessionID, nTabId, strLockId, null);
        }
        
        /// <remarks/>
        public void DeleteUCCAsync(string strSessionID, int nTabId, string strLockId, object userState) {
            if ((this.DeleteUCCOperationCompleted == null)) {
                this.DeleteUCCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUCCOperationCompleted);
            }
            this.InvokeAsync("DeleteUCC", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, this.DeleteUCCOperationCompleted, userState);
        }
        
        private void OnDeleteUCCOperationCompleted(object arg) {
            if ((this.DeleteUCCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUCCCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetAdCopy", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAdCopy(string strSessionID, int nAdCopyId, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetAdCopy", new object[] {
                        strSessionID,
                        nAdCopyId,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAdCopy(string strSessionID, int nAdCopyId, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAdCopy", new object[] {
                        strSessionID,
                        nAdCopyId,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAdCopy(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdCopyAsync(string strSessionID, int nAdCopyId, bool bLockFlag) {
            this.GetAdCopyAsync(strSessionID, nAdCopyId, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetAdCopyAsync(string strSessionID, int nAdCopyId, bool bLockFlag, object userState) {
            if ((this.GetAdCopyOperationCompleted == null)) {
                this.GetAdCopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdCopyOperationCompleted);
            }
            this.InvokeAsync("GetAdCopy", new object[] {
                        strSessionID,
                        nAdCopyId,
                        bLockFlag}, this.GetAdCopyOperationCompleted, userState);
        }
        
        private void OnGetAdCopyOperationCompleted(object arg) {
            if ((this.GetAdCopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdCopyCompleted(this, new GetAdCopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutAdCopy_Deprecated", RequestElementName="PutAdCopy_Deprecated", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseElementName="PutAdCopy_DeprecatedResponse", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutAdCopy(string strSessionID, int nAdCopyId, string strLockID, System.Data.DataSet dsAdCopy) {
            this.Invoke("PutAdCopy", new object[] {
                        strSessionID,
                        nAdCopyId,
                        strLockID,
                        dsAdCopy});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutAdCopy(string strSessionID, int nAdCopyId, string strLockID, System.Data.DataSet dsAdCopy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutAdCopy", new object[] {
                        strSessionID,
                        nAdCopyId,
                        strLockID,
                        dsAdCopy}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutAdCopy(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutAdCopyAsync(string strSessionID, int nAdCopyId, string strLockID, System.Data.DataSet dsAdCopy) {
            this.PutAdCopyAsync(strSessionID, nAdCopyId, strLockID, dsAdCopy, null);
        }
        
        /// <remarks/>
        public void PutAdCopyAsync(string strSessionID, int nAdCopyId, string strLockID, System.Data.DataSet dsAdCopy, object userState) {
            if ((this.PutAdCopyOperationCompleted == null)) {
                this.PutAdCopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutAdCopyOperationCompleted);
            }
            this.InvokeAsync("PutAdCopy", new object[] {
                        strSessionID,
                        nAdCopyId,
                        strLockID,
                        dsAdCopy}, this.PutAdCopyOperationCompleted, userState);
        }
        
        private void OnPutAdCopyOperationCompleted(object arg) {
            if ((this.PutAdCopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutAdCopyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="PutAdCopy1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutAdCopy", RequestElementName="PutAdCopy", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseElementName="PutAdCopyResponse", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutAdCopy(string strSessionID, string strLockID, System.Data.DataSet dsAdCopy) {
            this.Invoke("PutAdCopy1", new object[] {
                        strSessionID,
                        strLockID,
                        dsAdCopy});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutAdCopy1(string strSessionID, string strLockID, System.Data.DataSet dsAdCopy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutAdCopy1", new object[] {
                        strSessionID,
                        strLockID,
                        dsAdCopy}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutAdCopy1(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutAdCopy1Async(string strSessionID, string strLockID, System.Data.DataSet dsAdCopy) {
            this.PutAdCopy1Async(strSessionID, strLockID, dsAdCopy, null);
        }
        
        /// <remarks/>
        public void PutAdCopy1Async(string strSessionID, string strLockID, System.Data.DataSet dsAdCopy, object userState) {
            if ((this.PutAdCopy1OperationCompleted == null)) {
                this.PutAdCopy1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutAdCopy1OperationCompleted);
            }
            this.InvokeAsync("PutAdCopy1", new object[] {
                        strSessionID,
                        strLockID,
                        dsAdCopy}, this.PutAdCopy1OperationCompleted, userState);
        }
        
        private void OnPutAdCopy1OperationCompleted(object arg) {
            if ((this.PutAdCopy1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutAdCopy1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetPackage", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackage(string strSessionID, int nPackageID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetPackage", new object[] {
                        strSessionID,
                        nPackageID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPackage(string strSessionID, int nPackageID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPackage", new object[] {
                        strSessionID,
                        nPackageID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPackage(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageAsync(string strSessionID, int nPackageID, bool bLockFlag) {
            this.GetPackageAsync(strSessionID, nPackageID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetPackageAsync(string strSessionID, int nPackageID, bool bLockFlag, object userState) {
            if ((this.GetPackageOperationCompleted == null)) {
                this.GetPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageOperationCompleted);
            }
            this.InvokeAsync("GetPackage", new object[] {
                        strSessionID,
                        nPackageID,
                        bLockFlag}, this.GetPackageOperationCompleted, userState);
        }
        
        private void OnGetPackageOperationCompleted(object arg) {
            if ((this.GetPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageCompleted(this, new GetPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetFeatureMediaInventory", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeatureMediaInventory(string strSessionID, int nFeatureMediaInventoryID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetFeatureMediaInventory", new object[] {
                        strSessionID,
                        nFeatureMediaInventoryID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFeatureMediaInventory(string strSessionID, int nFeatureMediaInventoryID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFeatureMediaInventory", new object[] {
                        strSessionID,
                        nFeatureMediaInventoryID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFeatureMediaInventory(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeatureMediaInventoryAsync(string strSessionID, int nFeatureMediaInventoryID, bool bLockFlag) {
            this.GetFeatureMediaInventoryAsync(strSessionID, nFeatureMediaInventoryID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetFeatureMediaInventoryAsync(string strSessionID, int nFeatureMediaInventoryID, bool bLockFlag, object userState) {
            if ((this.GetFeatureMediaInventoryOperationCompleted == null)) {
                this.GetFeatureMediaInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeatureMediaInventoryOperationCompleted);
            }
            this.InvokeAsync("GetFeatureMediaInventory", new object[] {
                        strSessionID,
                        nFeatureMediaInventoryID,
                        bLockFlag}, this.GetFeatureMediaInventoryOperationCompleted, userState);
        }
        
        private void OnGetFeatureMediaInventoryOperationCompleted(object arg) {
            if ((this.GetFeatureMediaInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeatureMediaInventoryCompleted(this, new GetFeatureMediaInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutFeatureMediaInventory", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutFeatureMediaInventory(string strSessionID, string strLockID, System.Data.DataSet dsFeatureMediaInventory) {
            this.Invoke("PutFeatureMediaInventory", new object[] {
                        strSessionID,
                        strLockID,
                        dsFeatureMediaInventory});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutFeatureMediaInventory(string strSessionID, string strLockID, System.Data.DataSet dsFeatureMediaInventory, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutFeatureMediaInventory", new object[] {
                        strSessionID,
                        strLockID,
                        dsFeatureMediaInventory}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutFeatureMediaInventory(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutFeatureMediaInventoryAsync(string strSessionID, string strLockID, System.Data.DataSet dsFeatureMediaInventory) {
            this.PutFeatureMediaInventoryAsync(strSessionID, strLockID, dsFeatureMediaInventory, null);
        }
        
        /// <remarks/>
        public void PutFeatureMediaInventoryAsync(string strSessionID, string strLockID, System.Data.DataSet dsFeatureMediaInventory, object userState) {
            if ((this.PutFeatureMediaInventoryOperationCompleted == null)) {
                this.PutFeatureMediaInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutFeatureMediaInventoryOperationCompleted);
            }
            this.InvokeAsync("PutFeatureMediaInventory", new object[] {
                        strSessionID,
                        strLockID,
                        dsFeatureMediaInventory}, this.PutFeatureMediaInventoryOperationCompleted, userState);
        }
        
        private void OnPutFeatureMediaInventoryOperationCompleted(object arg) {
            if ((this.PutFeatureMediaInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutFeatureMediaInventoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetMediaInventoryRevision" +
            "", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediaInventoryRevision(string strSessionID, int nMediaInventoryRevisionID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetMediaInventoryRevision", new object[] {
                        strSessionID,
                        nMediaInventoryRevisionID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediaInventoryRevision(string strSessionID, int nMediaInventoryRevisionID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediaInventoryRevision", new object[] {
                        strSessionID,
                        nMediaInventoryRevisionID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediaInventoryRevision(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaInventoryRevisionAsync(string strSessionID, int nMediaInventoryRevisionID, bool bLockFlag) {
            this.GetMediaInventoryRevisionAsync(strSessionID, nMediaInventoryRevisionID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetMediaInventoryRevisionAsync(string strSessionID, int nMediaInventoryRevisionID, bool bLockFlag, object userState) {
            if ((this.GetMediaInventoryRevisionOperationCompleted == null)) {
                this.GetMediaInventoryRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaInventoryRevisionOperationCompleted);
            }
            this.InvokeAsync("GetMediaInventoryRevision", new object[] {
                        strSessionID,
                        nMediaInventoryRevisionID,
                        bLockFlag}, this.GetMediaInventoryRevisionOperationCompleted, userState);
        }
        
        private void OnGetMediaInventoryRevisionOperationCompleted(object arg) {
            if ((this.GetMediaInventoryRevisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaInventoryRevisionCompleted(this, new GetMediaInventoryRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutMediaInventoryRevision" +
            "", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutMediaInventoryRevision(string strSessionID, string strLockID, System.Data.DataSet dsMediaInventoryRevision) {
            this.Invoke("PutMediaInventoryRevision", new object[] {
                        strSessionID,
                        strLockID,
                        dsMediaInventoryRevision});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutMediaInventoryRevision(string strSessionID, string strLockID, System.Data.DataSet dsMediaInventoryRevision, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutMediaInventoryRevision", new object[] {
                        strSessionID,
                        strLockID,
                        dsMediaInventoryRevision}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutMediaInventoryRevision(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutMediaInventoryRevisionAsync(string strSessionID, string strLockID, System.Data.DataSet dsMediaInventoryRevision) {
            this.PutMediaInventoryRevisionAsync(strSessionID, strLockID, dsMediaInventoryRevision, null);
        }
        
        /// <remarks/>
        public void PutMediaInventoryRevisionAsync(string strSessionID, string strLockID, System.Data.DataSet dsMediaInventoryRevision, object userState) {
            if ((this.PutMediaInventoryRevisionOperationCompleted == null)) {
                this.PutMediaInventoryRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutMediaInventoryRevisionOperationCompleted);
            }
            this.InvokeAsync("PutMediaInventoryRevision", new object[] {
                        strSessionID,
                        strLockID,
                        dsMediaInventoryRevision}, this.PutMediaInventoryRevisionOperationCompleted, userState);
        }
        
        private void OnPutMediaInventoryRevisionOperationCompleted(object arg) {
            if ((this.PutMediaInventoryRevisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutMediaInventoryRevisionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetAssetAppliesToRangeByT" +
            "ab", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAssetAppliesToRangeByTab(string strSessionID, int nTabID, string strTabType) {
            object[] results = this.Invoke("GetAssetAppliesToRangeByTab", new object[] {
                        strSessionID,
                        nTabID,
                        strTabType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAssetAppliesToRangeByTab(string strSessionID, int nTabID, string strTabType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAssetAppliesToRangeByTab", new object[] {
                        strSessionID,
                        nTabID,
                        strTabType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAssetAppliesToRangeByTab(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssetAppliesToRangeByTabAsync(string strSessionID, int nTabID, string strTabType) {
            this.GetAssetAppliesToRangeByTabAsync(strSessionID, nTabID, strTabType, null);
        }
        
        /// <remarks/>
        public void GetAssetAppliesToRangeByTabAsync(string strSessionID, int nTabID, string strTabType, object userState) {
            if ((this.GetAssetAppliesToRangeByTabOperationCompleted == null)) {
                this.GetAssetAppliesToRangeByTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetAppliesToRangeByTabOperationCompleted);
            }
            this.InvokeAsync("GetAssetAppliesToRangeByTab", new object[] {
                        strSessionID,
                        nTabID,
                        strTabType}, this.GetAssetAppliesToRangeByTabOperationCompleted, userState);
        }
        
        private void OnGetAssetAppliesToRangeByTabOperationCompleted(object arg) {
            if ((this.GetAssetAppliesToRangeByTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetAppliesToRangeByTabCompleted(this, new GetAssetAppliesToRangeByTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutAssetAppliesToRangeByT" +
            "ab", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutAssetAppliesToRangeByTab(string strSessionID, System.Data.DataSet dsAssetAppliesTo) {
            this.Invoke("PutAssetAppliesToRangeByTab", new object[] {
                        strSessionID,
                        dsAssetAppliesTo});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutAssetAppliesToRangeByTab(string strSessionID, System.Data.DataSet dsAssetAppliesTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutAssetAppliesToRangeByTab", new object[] {
                        strSessionID,
                        dsAssetAppliesTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutAssetAppliesToRangeByTab(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutAssetAppliesToRangeByTabAsync(string strSessionID, System.Data.DataSet dsAssetAppliesTo) {
            this.PutAssetAppliesToRangeByTabAsync(strSessionID, dsAssetAppliesTo, null);
        }
        
        /// <remarks/>
        public void PutAssetAppliesToRangeByTabAsync(string strSessionID, System.Data.DataSet dsAssetAppliesTo, object userState) {
            if ((this.PutAssetAppliesToRangeByTabOperationCompleted == null)) {
                this.PutAssetAppliesToRangeByTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutAssetAppliesToRangeByTabOperationCompleted);
            }
            this.InvokeAsync("PutAssetAppliesToRangeByTab", new object[] {
                        strSessionID,
                        dsAssetAppliesTo}, this.PutAssetAppliesToRangeByTabOperationCompleted, userState);
        }
        
        private void OnPutAssetAppliesToRangeByTabOperationCompleted(object arg) {
            if ((this.PutAssetAppliesToRangeByTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutAssetAppliesToRangeByTabCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetPackageAppliesToRangeB" +
            "yTab", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackageAppliesToRangeByTab(string strSessionID, int nTabID, string strTabType) {
            object[] results = this.Invoke("GetPackageAppliesToRangeByTab", new object[] {
                        strSessionID,
                        nTabID,
                        strTabType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPackageAppliesToRangeByTab(string strSessionID, int nTabID, string strTabType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPackageAppliesToRangeByTab", new object[] {
                        strSessionID,
                        nTabID,
                        strTabType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPackageAppliesToRangeByTab(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageAppliesToRangeByTabAsync(string strSessionID, int nTabID, string strTabType) {
            this.GetPackageAppliesToRangeByTabAsync(strSessionID, nTabID, strTabType, null);
        }
        
        /// <remarks/>
        public void GetPackageAppliesToRangeByTabAsync(string strSessionID, int nTabID, string strTabType, object userState) {
            if ((this.GetPackageAppliesToRangeByTabOperationCompleted == null)) {
                this.GetPackageAppliesToRangeByTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageAppliesToRangeByTabOperationCompleted);
            }
            this.InvokeAsync("GetPackageAppliesToRangeByTab", new object[] {
                        strSessionID,
                        nTabID,
                        strTabType}, this.GetPackageAppliesToRangeByTabOperationCompleted, userState);
        }
        
        private void OnGetPackageAppliesToRangeByTabOperationCompleted(object arg) {
            if ((this.GetPackageAppliesToRangeByTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageAppliesToRangeByTabCompleted(this, new GetPackageAppliesToRangeByTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutPackageAppliesToRangeB" +
            "yTab", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutPackageAppliesToRangeByTab(string strSessionID, System.Data.DataSet dsPackageAppliesTo) {
            this.Invoke("PutPackageAppliesToRangeByTab", new object[] {
                        strSessionID,
                        dsPackageAppliesTo});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutPackageAppliesToRangeByTab(string strSessionID, System.Data.DataSet dsPackageAppliesTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutPackageAppliesToRangeByTab", new object[] {
                        strSessionID,
                        dsPackageAppliesTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutPackageAppliesToRangeByTab(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutPackageAppliesToRangeByTabAsync(string strSessionID, System.Data.DataSet dsPackageAppliesTo) {
            this.PutPackageAppliesToRangeByTabAsync(strSessionID, dsPackageAppliesTo, null);
        }
        
        /// <remarks/>
        public void PutPackageAppliesToRangeByTabAsync(string strSessionID, System.Data.DataSet dsPackageAppliesTo, object userState) {
            if ((this.PutPackageAppliesToRangeByTabOperationCompleted == null)) {
                this.PutPackageAppliesToRangeByTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutPackageAppliesToRangeByTabOperationCompleted);
            }
            this.InvokeAsync("PutPackageAppliesToRangeByTab", new object[] {
                        strSessionID,
                        dsPackageAppliesTo}, this.PutPackageAppliesToRangeByTabOperationCompleted, userState);
        }
        
        private void OnPutPackageAppliesToRangeByTabOperationCompleted(object arg) {
            if ((this.PutPackageAppliesToRangeByTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutPackageAppliesToRangeByTabCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ListTabMapByDeal", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListTabMapByDeal(string strSessionID, int nDealId) {
            object[] results = this.Invoke("ListTabMapByDeal", new object[] {
                        strSessionID,
                        nDealId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListTabMapByDeal(string strSessionID, int nDealId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListTabMapByDeal", new object[] {
                        strSessionID,
                        nDealId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListTabMapByDeal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListTabMapByDealAsync(string strSessionID, int nDealId) {
            this.ListTabMapByDealAsync(strSessionID, nDealId, null);
        }
        
        /// <remarks/>
        public void ListTabMapByDealAsync(string strSessionID, int nDealId, object userState) {
            if ((this.ListTabMapByDealOperationCompleted == null)) {
                this.ListTabMapByDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListTabMapByDealOperationCompleted);
            }
            this.InvokeAsync("ListTabMapByDeal", new object[] {
                        strSessionID,
                        nDealId}, this.ListTabMapByDealOperationCompleted, userState);
        }
        
        private void OnListTabMapByDealOperationCompleted(object arg) {
            if ((this.ListTabMapByDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListTabMapByDealCompleted(this, new ListTabMapByDealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ListPAADeadline", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListPAADeadline(string strSessionID, int nDealStatus) {
            object[] results = this.Invoke("ListPAADeadline", new object[] {
                        strSessionID,
                        nDealStatus});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListPAADeadline(string strSessionID, int nDealStatus, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListPAADeadline", new object[] {
                        strSessionID,
                        nDealStatus}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListPAADeadline(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListPAADeadlineAsync(string strSessionID, int nDealStatus) {
            this.ListPAADeadlineAsync(strSessionID, nDealStatus, null);
        }
        
        /// <remarks/>
        public void ListPAADeadlineAsync(string strSessionID, int nDealStatus, object userState) {
            if ((this.ListPAADeadlineOperationCompleted == null)) {
                this.ListPAADeadlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPAADeadlineOperationCompleted);
            }
            this.InvokeAsync("ListPAADeadline", new object[] {
                        strSessionID,
                        nDealStatus}, this.ListPAADeadlineOperationCompleted, userState);
        }
        
        private void OnListPAADeadlineOperationCompleted(object arg) {
            if ((this.ListPAADeadlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPAADeadlineCompleted(this, new ListPAADeadlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ListFormDeadline", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListFormDeadline(string strSessionID, int nDealStatus) {
            object[] results = this.Invoke("ListFormDeadline", new object[] {
                        strSessionID,
                        nDealStatus});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListFormDeadline(string strSessionID, int nDealStatus, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListFormDeadline", new object[] {
                        strSessionID,
                        nDealStatus}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListFormDeadline(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListFormDeadlineAsync(string strSessionID, int nDealStatus) {
            this.ListFormDeadlineAsync(strSessionID, nDealStatus, null);
        }
        
        /// <remarks/>
        public void ListFormDeadlineAsync(string strSessionID, int nDealStatus, object userState) {
            if ((this.ListFormDeadlineOperationCompleted == null)) {
                this.ListFormDeadlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListFormDeadlineOperationCompleted);
            }
            this.InvokeAsync("ListFormDeadline", new object[] {
                        strSessionID,
                        nDealStatus}, this.ListFormDeadlineOperationCompleted, userState);
        }
        
        private void OnListFormDeadlineOperationCompleted(object arg) {
            if ((this.ListFormDeadlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListFormDeadlineCompleted(this, new ListFormDeadlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ListMissingEpisodeFormDea" +
            "dline", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListMissingEpisodeFormDeadline(string strSessionID) {
            object[] results = this.Invoke("ListMissingEpisodeFormDeadline", new object[] {
                        strSessionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListMissingEpisodeFormDeadline(string strSessionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListMissingEpisodeFormDeadline", new object[] {
                        strSessionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListMissingEpisodeFormDeadline(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListMissingEpisodeFormDeadlineAsync(string strSessionID) {
            this.ListMissingEpisodeFormDeadlineAsync(strSessionID, null);
        }
        
        /// <remarks/>
        public void ListMissingEpisodeFormDeadlineAsync(string strSessionID, object userState) {
            if ((this.ListMissingEpisodeFormDeadlineOperationCompleted == null)) {
                this.ListMissingEpisodeFormDeadlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMissingEpisodeFormDeadlineOperationCompleted);
            }
            this.InvokeAsync("ListMissingEpisodeFormDeadline", new object[] {
                        strSessionID}, this.ListMissingEpisodeFormDeadlineOperationCompleted, userState);
        }
        
        private void OnListMissingEpisodeFormDeadlineOperationCompleted(object arg) {
            if ((this.ListMissingEpisodeFormDeadlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMissingEpisodeFormDeadlineCompleted(this, new ListMissingEpisodeFormDeadlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ListMissingVersionFormDea" +
            "dline", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListMissingVersionFormDeadline(string strSessionID) {
            object[] results = this.Invoke("ListMissingVersionFormDeadline", new object[] {
                        strSessionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListMissingVersionFormDeadline(string strSessionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListMissingVersionFormDeadline", new object[] {
                        strSessionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListMissingVersionFormDeadline(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListMissingVersionFormDeadlineAsync(string strSessionID) {
            this.ListMissingVersionFormDeadlineAsync(strSessionID, null);
        }
        
        /// <remarks/>
        public void ListMissingVersionFormDeadlineAsync(string strSessionID, object userState) {
            if ((this.ListMissingVersionFormDeadlineOperationCompleted == null)) {
                this.ListMissingVersionFormDeadlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMissingVersionFormDeadlineOperationCompleted);
            }
            this.InvokeAsync("ListMissingVersionFormDeadline", new object[] {
                        strSessionID}, this.ListMissingVersionFormDeadlineOperationCompleted, userState);
        }
        
        private void OnListMissingVersionFormDeadlineOperationCompleted(object arg) {
            if ((this.ListMissingVersionFormDeadlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMissingVersionFormDeadlineCompleted(this, new ListMissingVersionFormDeadlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetDiscrepancyProgram", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sPackageID")]
        public string GetDiscrepancyProgram(string sChannel, string sDicrepancyStartDate, out string sPackagenumber, out string sPackageTile, out string sProgramTile, out string sSeriesTile, out string sProgramEpisodeTitle, out System.DateTime dSchedDateTime, out int nSchedDuration) {
            object[] results = this.Invoke("GetDiscrepancyProgram", new object[] {
                        sChannel,
                        sDicrepancyStartDate});
            sPackagenumber = ((string)(results[1]));
            sPackageTile = ((string)(results[2]));
            sProgramTile = ((string)(results[3]));
            sSeriesTile = ((string)(results[4]));
            sProgramEpisodeTitle = ((string)(results[5]));
            dSchedDateTime = ((System.DateTime)(results[6]));
            nSchedDuration = ((int)(results[7]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDiscrepancyProgram(string sChannel, string sDicrepancyStartDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDiscrepancyProgram", new object[] {
                        sChannel,
                        sDicrepancyStartDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDiscrepancyProgram(System.IAsyncResult asyncResult, out string sPackagenumber, out string sPackageTile, out string sProgramTile, out string sSeriesTile, out string sProgramEpisodeTitle, out System.DateTime dSchedDateTime, out int nSchedDuration) {
            object[] results = this.EndInvoke(asyncResult);
            sPackagenumber = ((string)(results[1]));
            sPackageTile = ((string)(results[2]));
            sProgramTile = ((string)(results[3]));
            sSeriesTile = ((string)(results[4]));
            sProgramEpisodeTitle = ((string)(results[5]));
            dSchedDateTime = ((System.DateTime)(results[6]));
            nSchedDuration = ((int)(results[7]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiscrepancyProgramAsync(string sChannel, string sDicrepancyStartDate) {
            this.GetDiscrepancyProgramAsync(sChannel, sDicrepancyStartDate, null);
        }
        
        /// <remarks/>
        public void GetDiscrepancyProgramAsync(string sChannel, string sDicrepancyStartDate, object userState) {
            if ((this.GetDiscrepancyProgramOperationCompleted == null)) {
                this.GetDiscrepancyProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiscrepancyProgramOperationCompleted);
            }
            this.InvokeAsync("GetDiscrepancyProgram", new object[] {
                        sChannel,
                        sDicrepancyStartDate}, this.GetDiscrepancyProgramOperationCompleted, userState);
        }
        
        private void OnGetDiscrepancyProgramOperationCompleted(object arg) {
            if ((this.GetDiscrepancyProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiscrepancyProgramCompleted(this, new GetDiscrepancyProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ReleaseLock", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseLock(string strSessionID, string strLockID) {
            this.Invoke("ReleaseLock", new object[] {
                        strSessionID,
                        strLockID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReleaseLock(string strSessionID, string strLockID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReleaseLock", new object[] {
                        strSessionID,
                        strLockID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndReleaseLock(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ReleaseLockAsync(string strSessionID, string strLockID) {
            this.ReleaseLockAsync(strSessionID, strLockID, null);
        }
        
        /// <remarks/>
        public void ReleaseLockAsync(string strSessionID, string strLockID, object userState) {
            if ((this.ReleaseLockOperationCompleted == null)) {
                this.ReleaseLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseLockOperationCompleted);
            }
            this.InvokeAsync("ReleaseLock", new object[] {
                        strSessionID,
                        strLockID}, this.ReleaseLockOperationCompleted, userState);
        }
        
        private void OnReleaseLockOperationCompleted(object arg) {
            if ((this.ReleaseLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseLockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetIDs", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetIDs(int nHowMany) {
            object[] results = this.Invoke("GetIDs", new object[] {
                        nHowMany});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetIDs(int nHowMany, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetIDs", new object[] {
                        nHowMany}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetIDs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetIDsAsync(int nHowMany) {
            this.GetIDsAsync(nHowMany, null);
        }
        
        /// <remarks/>
        public void GetIDsAsync(int nHowMany, object userState) {
            if ((this.GetIDsOperationCompleted == null)) {
                this.GetIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIDsOperationCompleted);
            }
            this.InvokeAsync("GetIDs", new object[] {
                        nHowMany}, this.GetIDsOperationCompleted, userState);
        }
        
        private void OnGetIDsOperationCompleted(object arg) {
            if ((this.GetIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIDsCompleted(this, new GetIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/OpenSession", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenSession(UserProfile userProfile) {
            object[] results = this.Invoke("OpenSession", new object[] {
                        userProfile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOpenSession(UserProfile userProfile, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OpenSession", new object[] {
                        userProfile}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOpenSession(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenSessionAsync(UserProfile userProfile) {
            this.OpenSessionAsync(userProfile, null);
        }
        
        /// <remarks/>
        public void OpenSessionAsync(UserProfile userProfile, object userState) {
            if ((this.OpenSessionOperationCompleted == null)) {
                this.OpenSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenSessionOperationCompleted);
            }
            this.InvokeAsync("OpenSession", new object[] {
                        userProfile}, this.OpenSessionOperationCompleted, userState);
        }
        
        private void OnOpenSessionOperationCompleted(object arg) {
            if ((this.OpenSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenSessionCompleted(this, new OpenSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/CloseSession", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseSession(string strSessionID) {
            this.Invoke("CloseSession", new object[] {
                        strSessionID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCloseSession(string strSessionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CloseSession", new object[] {
                        strSessionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCloseSession(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CloseSessionAsync(string strSessionID) {
            this.CloseSessionAsync(strSessionID, null);
        }
        
        /// <remarks/>
        public void CloseSessionAsync(string strSessionID, object userState) {
            if ((this.CloseSessionOperationCompleted == null)) {
                this.CloseSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseSessionOperationCompleted);
            }
            this.InvokeAsync("CloseSession", new object[] {
                        strSessionID}, this.CloseSessionOperationCompleted, userState);
        }
        
        private void OnCloseSessionOperationCompleted(object arg) {
            if ((this.CloseSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/DebugTimeOut", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DebugTimeOut(string strSessionID, int nTimeDelay) {
            this.Invoke("DebugTimeOut", new object[] {
                        strSessionID,
                        nTimeDelay});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDebugTimeOut(string strSessionID, int nTimeDelay, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DebugTimeOut", new object[] {
                        strSessionID,
                        nTimeDelay}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDebugTimeOut(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DebugTimeOutAsync(string strSessionID, int nTimeDelay) {
            this.DebugTimeOutAsync(strSessionID, nTimeDelay, null);
        }
        
        /// <remarks/>
        public void DebugTimeOutAsync(string strSessionID, int nTimeDelay, object userState) {
            if ((this.DebugTimeOutOperationCompleted == null)) {
                this.DebugTimeOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebugTimeOutOperationCompleted);
            }
            this.InvokeAsync("DebugTimeOut", new object[] {
                        strSessionID,
                        nTimeDelay}, this.DebugTimeOutOperationCompleted, userState);
        }
        
        private void OnDebugTimeOutOperationCompleted(object arg) {
            if ((this.DebugTimeOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebugTimeOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetDeal", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeal(string strSessionID, int nDealID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetDeal", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeal(string strSessionID, int nDealID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeal", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDeal(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealAsync(string strSessionID, int nDealID, bool bLockFlag) {
            this.GetDealAsync(strSessionID, nDealID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetDealAsync(string strSessionID, int nDealID, bool bLockFlag, object userState) {
            if ((this.GetDealOperationCompleted == null)) {
                this.GetDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealOperationCompleted);
            }
            this.InvokeAsync("GetDeal", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, this.GetDealOperationCompleted, userState);
        }
        
        private void OnGetDealOperationCompleted(object arg) {
            if ((this.GetDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealCompleted(this, new GetDealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutDeal", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutDeal(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.Invoke("PutDeal", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutDeal(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutDeal", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutDeal(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutDealAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.PutDealAsync(strSessionID, nDealID, strLockID, dsDeal, null);
        }
        
        /// <remarks/>
        public void PutDealAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, object userState) {
            if ((this.PutDealOperationCompleted == null)) {
                this.PutDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutDealOperationCompleted);
            }
            this.InvokeAsync("PutDeal", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, this.PutDealOperationCompleted, userState);
        }
        
        private void OnPutDealOperationCompleted(object arg) {
            if ((this.PutDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutDealCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/CreateDeal", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateDeal(string p_sSessionId, int p_iDealId, string p_sDealDescription, int p_iMasterDealId, string p_sMasterDealTitle, bool p_bIsSDRights, bool p_bIsHDRights, int[] p_aiEpisodeIds, int[] p_aiDealAttributeIds) {
            this.Invoke("CreateDeal", new object[] {
                        p_sSessionId,
                        p_iDealId,
                        p_sDealDescription,
                        p_iMasterDealId,
                        p_sMasterDealTitle,
                        p_bIsSDRights,
                        p_bIsHDRights,
                        p_aiEpisodeIds,
                        p_aiDealAttributeIds});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateDeal(string p_sSessionId, int p_iDealId, string p_sDealDescription, int p_iMasterDealId, string p_sMasterDealTitle, bool p_bIsSDRights, bool p_bIsHDRights, int[] p_aiEpisodeIds, int[] p_aiDealAttributeIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateDeal", new object[] {
                        p_sSessionId,
                        p_iDealId,
                        p_sDealDescription,
                        p_iMasterDealId,
                        p_sMasterDealTitle,
                        p_bIsSDRights,
                        p_bIsHDRights,
                        p_aiEpisodeIds,
                        p_aiDealAttributeIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateDeal(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateDealAsync(string p_sSessionId, int p_iDealId, string p_sDealDescription, int p_iMasterDealId, string p_sMasterDealTitle, bool p_bIsSDRights, bool p_bIsHDRights, int[] p_aiEpisodeIds, int[] p_aiDealAttributeIds) {
            this.CreateDealAsync(p_sSessionId, p_iDealId, p_sDealDescription, p_iMasterDealId, p_sMasterDealTitle, p_bIsSDRights, p_bIsHDRights, p_aiEpisodeIds, p_aiDealAttributeIds, null);
        }
        
        /// <remarks/>
        public void CreateDealAsync(string p_sSessionId, int p_iDealId, string p_sDealDescription, int p_iMasterDealId, string p_sMasterDealTitle, bool p_bIsSDRights, bool p_bIsHDRights, int[] p_aiEpisodeIds, int[] p_aiDealAttributeIds, object userState) {
            if ((this.CreateDealOperationCompleted == null)) {
                this.CreateDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDealOperationCompleted);
            }
            this.InvokeAsync("CreateDeal", new object[] {
                        p_sSessionId,
                        p_iDealId,
                        p_sDealDescription,
                        p_iMasterDealId,
                        p_sMasterDealTitle,
                        p_bIsSDRights,
                        p_bIsHDRights,
                        p_aiEpisodeIds,
                        p_aiDealAttributeIds}, this.CreateDealOperationCompleted, userState);
        }
        
        private void OnCreateDealOperationCompleted(object arg) {
            if ((this.CreateDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDealCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetDealAll", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealAll(string strSessionID, int nDealID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetDealAll", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDealAll(string strSessionID, int nDealID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDealAll", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDealAll(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealAllAsync(string strSessionID, int nDealID, bool bLockFlag) {
            this.GetDealAllAsync(strSessionID, nDealID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetDealAllAsync(string strSessionID, int nDealID, bool bLockFlag, object userState) {
            if ((this.GetDealAllOperationCompleted == null)) {
                this.GetDealAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealAllOperationCompleted);
            }
            this.InvokeAsync("GetDealAll", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, this.GetDealAllOperationCompleted, userState);
        }
        
        private void OnGetDealAllOperationCompleted(object arg) {
            if ((this.GetDealAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealAllCompleted(this, new GetDealAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetDealWithFunding", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealWithFunding(string strSessionID, int nDealID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetDealWithFunding", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDealWithFunding(string strSessionID, int nDealID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDealWithFunding", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDealWithFunding(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealWithFundingAsync(string strSessionID, int nDealID, bool bLockFlag) {
            this.GetDealWithFundingAsync(strSessionID, nDealID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetDealWithFundingAsync(string strSessionID, int nDealID, bool bLockFlag, object userState) {
            if ((this.GetDealWithFundingOperationCompleted == null)) {
                this.GetDealWithFundingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealWithFundingOperationCompleted);
            }
            this.InvokeAsync("GetDealWithFunding", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, this.GetDealWithFundingOperationCompleted, userState);
        }
        
        private void OnGetDealWithFundingOperationCompleted(object arg) {
            if ((this.GetDealWithFundingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealWithFundingCompleted(this, new GetDealWithFundingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutDealWithFunding", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutDealWithFunding(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.Invoke("PutDealWithFunding", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutDealWithFunding(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutDealWithFunding", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutDealWithFunding(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutDealWithFundingAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.PutDealWithFundingAsync(strSessionID, nDealID, strLockID, dsDeal, null);
        }
        
        /// <remarks/>
        public void PutDealWithFundingAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, object userState) {
            if ((this.PutDealWithFundingOperationCompleted == null)) {
                this.PutDealWithFundingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutDealWithFundingOperationCompleted);
            }
            this.InvokeAsync("PutDealWithFunding", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, this.PutDealWithFundingOperationCompleted, userState);
        }
        
        private void OnPutDealWithFundingOperationCompleted(object arg) {
            if ((this.PutDealWithFundingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutDealWithFundingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetDealWithGeneral", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealWithGeneral(string strSessionID, int nDealID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetDealWithGeneral", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDealWithGeneral(string strSessionID, int nDealID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDealWithGeneral", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDealWithGeneral(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealWithGeneralAsync(string strSessionID, int nDealID, bool bLockFlag) {
            this.GetDealWithGeneralAsync(strSessionID, nDealID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetDealWithGeneralAsync(string strSessionID, int nDealID, bool bLockFlag, object userState) {
            if ((this.GetDealWithGeneralOperationCompleted == null)) {
                this.GetDealWithGeneralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealWithGeneralOperationCompleted);
            }
            this.InvokeAsync("GetDealWithGeneral", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, this.GetDealWithGeneralOperationCompleted, userState);
        }
        
        private void OnGetDealWithGeneralOperationCompleted(object arg) {
            if ((this.GetDealWithGeneralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealWithGeneralCompleted(this, new GetDealWithGeneralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutDealWithGeneral", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutDealWithGeneral(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.Invoke("PutDealWithGeneral", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutDealWithGeneral(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutDealWithGeneral", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutDealWithGeneral(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutDealWithGeneralAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.PutDealWithGeneralAsync(strSessionID, nDealID, strLockID, dsDeal, null);
        }
        
        /// <remarks/>
        public void PutDealWithGeneralAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, object userState) {
            if ((this.PutDealWithGeneralOperationCompleted == null)) {
                this.PutDealWithGeneralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutDealWithGeneralOperationCompleted);
            }
            this.InvokeAsync("PutDealWithGeneral", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, this.PutDealWithGeneralOperationCompleted, userState);
        }
        
        private void OnPutDealWithGeneralOperationCompleted(object arg) {
            if ((this.PutDealWithGeneralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutDealWithGeneralCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetDealWithRights", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealWithRights(string strSessionID, int nDealID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetDealWithRights", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDealWithRights(string strSessionID, int nDealID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDealWithRights", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDealWithRights(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealWithRightsAsync(string strSessionID, int nDealID, bool bLockFlag) {
            this.GetDealWithRightsAsync(strSessionID, nDealID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetDealWithRightsAsync(string strSessionID, int nDealID, bool bLockFlag, object userState) {
            if ((this.GetDealWithRightsOperationCompleted == null)) {
                this.GetDealWithRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealWithRightsOperationCompleted);
            }
            this.InvokeAsync("GetDealWithRights", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, this.GetDealWithRightsOperationCompleted, userState);
        }
        
        private void OnGetDealWithRightsOperationCompleted(object arg) {
            if ((this.GetDealWithRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealWithRightsCompleted(this, new GetDealWithRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutDealWithRights", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutDealWithRights(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.Invoke("PutDealWithRights", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutDealWithRights(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutDealWithRights", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutDealWithRights(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutDealWithRightsAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.PutDealWithRightsAsync(strSessionID, nDealID, strLockID, dsDeal, null);
        }
        
        /// <remarks/>
        public void PutDealWithRightsAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, object userState) {
            if ((this.PutDealWithRightsOperationCompleted == null)) {
                this.PutDealWithRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutDealWithRightsOperationCompleted);
            }
            this.InvokeAsync("PutDealWithRights", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, this.PutDealWithRightsOperationCompleted, userState);
        }
        
        private void OnPutDealWithRightsOperationCompleted(object arg) {
            if ((this.PutDealWithRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutDealWithRightsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetDealWithTechnical", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealWithTechnical(string strSessionID, int nDealID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetDealWithTechnical", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDealWithTechnical(string strSessionID, int nDealID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDealWithTechnical", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDealWithTechnical(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealWithTechnicalAsync(string strSessionID, int nDealID, bool bLockFlag) {
            this.GetDealWithTechnicalAsync(strSessionID, nDealID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetDealWithTechnicalAsync(string strSessionID, int nDealID, bool bLockFlag, object userState) {
            if ((this.GetDealWithTechnicalOperationCompleted == null)) {
                this.GetDealWithTechnicalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealWithTechnicalOperationCompleted);
            }
            this.InvokeAsync("GetDealWithTechnical", new object[] {
                        strSessionID,
                        nDealID,
                        bLockFlag}, this.GetDealWithTechnicalOperationCompleted, userState);
        }
        
        private void OnGetDealWithTechnicalOperationCompleted(object arg) {
            if ((this.GetDealWithTechnicalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealWithTechnicalCompleted(this, new GetDealWithTechnicalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutDealWithTechnical", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutDealWithTechnical(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.Invoke("PutDealWithTechnical", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutDealWithTechnical(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutDealWithTechnical", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutDealWithTechnical(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutDealWithTechnicalAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal) {
            this.PutDealWithTechnicalAsync(strSessionID, nDealID, strLockID, dsDeal, null);
        }
        
        /// <remarks/>
        public void PutDealWithTechnicalAsync(string strSessionID, int nDealID, string strLockID, System.Data.DataSet dsDeal, object userState) {
            if ((this.PutDealWithTechnicalOperationCompleted == null)) {
                this.PutDealWithTechnicalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutDealWithTechnicalOperationCompleted);
            }
            this.InvokeAsync("PutDealWithTechnical", new object[] {
                        strSessionID,
                        nDealID,
                        strLockID,
                        dsDeal}, this.PutDealWithTechnicalOperationCompleted, userState);
        }
        
        private void OnPutDealWithTechnicalOperationCompleted(object arg) {
            if ((this.PutDealWithTechnicalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutDealWithTechnicalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetMasterDeal", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMasterDeal(string strSessionID, string strLimitingDate) {
            object[] results = this.Invoke("GetMasterDeal", new object[] {
                        strSessionID,
                        strLimitingDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMasterDeal(string strSessionID, string strLimitingDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMasterDeal", new object[] {
                        strSessionID,
                        strLimitingDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMasterDeal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterDealAsync(string strSessionID, string strLimitingDate) {
            this.GetMasterDealAsync(strSessionID, strLimitingDate, null);
        }
        
        /// <remarks/>
        public void GetMasterDealAsync(string strSessionID, string strLimitingDate, object userState) {
            if ((this.GetMasterDealOperationCompleted == null)) {
                this.GetMasterDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterDealOperationCompleted);
            }
            this.InvokeAsync("GetMasterDeal", new object[] {
                        strSessionID,
                        strLimitingDate}, this.GetMasterDealOperationCompleted, userState);
        }
        
        private void OnGetMasterDealOperationCompleted(object arg) {
            if ((this.GetMasterDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterDealCompleted(this, new GetMasterDealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/CreateMediaInventoryRevis" +
            "ion", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMediaInventoryRevision(string strSessionID, string strLockId, int nOldMediaInventoryID, int nNewMediaInventoryRevisionID) {
            this.Invoke("CreateMediaInventoryRevision", new object[] {
                        strSessionID,
                        strLockId,
                        nOldMediaInventoryID,
                        nNewMediaInventoryRevisionID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateMediaInventoryRevision(string strSessionID, string strLockId, int nOldMediaInventoryID, int nNewMediaInventoryRevisionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateMediaInventoryRevision", new object[] {
                        strSessionID,
                        strLockId,
                        nOldMediaInventoryID,
                        nNewMediaInventoryRevisionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateMediaInventoryRevision(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateMediaInventoryRevisionAsync(string strSessionID, string strLockId, int nOldMediaInventoryID, int nNewMediaInventoryRevisionID) {
            this.CreateMediaInventoryRevisionAsync(strSessionID, strLockId, nOldMediaInventoryID, nNewMediaInventoryRevisionID, null);
        }
        
        /// <remarks/>
        public void CreateMediaInventoryRevisionAsync(string strSessionID, string strLockId, int nOldMediaInventoryID, int nNewMediaInventoryRevisionID, object userState) {
            if ((this.CreateMediaInventoryRevisionOperationCompleted == null)) {
                this.CreateMediaInventoryRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMediaInventoryRevisionOperationCompleted);
            }
            this.InvokeAsync("CreateMediaInventoryRevision", new object[] {
                        strSessionID,
                        strLockId,
                        nOldMediaInventoryID,
                        nNewMediaInventoryRevisionID}, this.CreateMediaInventoryRevisionOperationCompleted, userState);
        }
        
        private void OnCreateMediaInventoryRevisionOperationCompleted(object arg) {
            if ((this.CreateMediaInventoryRevisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMediaInventoryRevisionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetBarCode", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("bBarCode", DataType="base64Binary")]
        public byte[] GetBarCode(string strSessionID, int nMediaInventoryID) {
            object[] results = this.Invoke("GetBarCode", new object[] {
                        strSessionID,
                        nMediaInventoryID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBarCode(string strSessionID, int nMediaInventoryID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBarCode", new object[] {
                        strSessionID,
                        nMediaInventoryID}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetBarCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBarCodeAsync(string strSessionID, int nMediaInventoryID) {
            this.GetBarCodeAsync(strSessionID, nMediaInventoryID, null);
        }
        
        /// <remarks/>
        public void GetBarCodeAsync(string strSessionID, int nMediaInventoryID, object userState) {
            if ((this.GetBarCodeOperationCompleted == null)) {
                this.GetBarCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBarCodeOperationCompleted);
            }
            this.InvokeAsync("GetBarCode", new object[] {
                        strSessionID,
                        nMediaInventoryID}, this.GetBarCodeOperationCompleted, userState);
        }
        
        private void OnGetBarCodeOperationCompleted(object arg) {
            if ((this.GetBarCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBarCodeCompleted(this, new GetBarCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/DealSearch", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DealSearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            object[] results = this.Invoke("DealSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDealSearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DealSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDealSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DealSearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            this.DealSearchAsync(strSessionID, SearchCriteria, nMaxRows, null);
        }
        
        /// <remarks/>
        public void DealSearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, object userState) {
            if ((this.DealSearchOperationCompleted == null)) {
                this.DealSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealSearchOperationCompleted);
            }
            this.InvokeAsync("DealSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, this.DealSearchOperationCompleted, userState);
        }
        
        private void OnDealSearchOperationCompleted(object arg) {
            if ((this.DealSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealSearchCompleted(this, new DealSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ProgramSearch", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ProgramSearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            object[] results = this.Invoke("ProgramSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProgramSearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProgramSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndProgramSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ProgramSearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            this.ProgramSearchAsync(strSessionID, SearchCriteria, nMaxRows, null);
        }
        
        /// <remarks/>
        public void ProgramSearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, object userState) {
            if ((this.ProgramSearchOperationCompleted == null)) {
                this.ProgramSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgramSearchOperationCompleted);
            }
            this.InvokeAsync("ProgramSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, this.ProgramSearchOperationCompleted, userState);
        }
        
        private void OnProgramSearchOperationCompleted(object arg) {
            if ((this.ProgramSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgramSearchCompleted(this, new ProgramSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/MasterDealSearch", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet MasterDealSearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            object[] results = this.Invoke("MasterDealSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMasterDealSearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MasterDealSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndMasterDealSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void MasterDealSearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            this.MasterDealSearchAsync(strSessionID, SearchCriteria, nMaxRows, null);
        }
        
        /// <remarks/>
        public void MasterDealSearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, object userState) {
            if ((this.MasterDealSearchOperationCompleted == null)) {
                this.MasterDealSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterDealSearchOperationCompleted);
            }
            this.InvokeAsync("MasterDealSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, this.MasterDealSearchOperationCompleted, userState);
        }
        
        private void OnMasterDealSearchOperationCompleted(object arg) {
            if ((this.MasterDealSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterDealSearchCompleted(this, new MasterDealSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/MediaInventorySearch", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet MediaInventorySearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            object[] results = this.Invoke("MediaInventorySearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMediaInventorySearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MediaInventorySearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndMediaInventorySearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void MediaInventorySearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            this.MediaInventorySearchAsync(strSessionID, SearchCriteria, nMaxRows, null);
        }
        
        /// <remarks/>
        public void MediaInventorySearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, object userState) {
            if ((this.MediaInventorySearchOperationCompleted == null)) {
                this.MediaInventorySearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaInventorySearchOperationCompleted);
            }
            this.InvokeAsync("MediaInventorySearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, this.MediaInventorySearchOperationCompleted, userState);
        }
        
        private void OnMediaInventorySearchOperationCompleted(object arg) {
            if ((this.MediaInventorySearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaInventorySearchCompleted(this, new MediaInventorySearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/TrafficItemSearch", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TrafficItemSearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            object[] results = this.Invoke("TrafficItemSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTrafficItemSearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TrafficItemSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndTrafficItemSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TrafficItemSearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            this.TrafficItemSearchAsync(strSessionID, SearchCriteria, nMaxRows, null);
        }
        
        /// <remarks/>
        public void TrafficItemSearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, object userState) {
            if ((this.TrafficItemSearchOperationCompleted == null)) {
                this.TrafficItemSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrafficItemSearchOperationCompleted);
            }
            this.InvokeAsync("TrafficItemSearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, this.TrafficItemSearchOperationCompleted, userState);
        }
        
        private void OnTrafficItemSearchOperationCompleted(object arg) {
            if ((this.TrafficItemSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrafficItemSearchCompleted(this, new TrafficItemSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/AdCopySearch", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AdCopySearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            object[] results = this.Invoke("AdCopySearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAdCopySearch(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AdCopySearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndAdCopySearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AdCopySearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows) {
            this.AdCopySearchAsync(strSessionID, SearchCriteria, nMaxRows, null);
        }
        
        /// <remarks/>
        public void AdCopySearchAsync(string strSessionID, SearchCriterion[] SearchCriteria, int nMaxRows, object userState) {
            if ((this.AdCopySearchOperationCompleted == null)) {
                this.AdCopySearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdCopySearchOperationCompleted);
            }
            this.InvokeAsync("AdCopySearch", new object[] {
                        strSessionID,
                        SearchCriteria,
                        nMaxRows}, this.AdCopySearchOperationCompleted, userState);
        }
        
        private void OnAdCopySearchOperationCompleted(object arg) {
            if ((this.AdCopySearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdCopySearchCompleted(this, new AdCopySearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ValidateEpisodeSlate", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateEpisodeSlate(string p_sSessionId, string p_sNolaRoot, int p_iStartingEpisodeNumber, int p_iNumberOfPrograms) {
            object[] results = this.Invoke("ValidateEpisodeSlate", new object[] {
                        p_sSessionId,
                        p_sNolaRoot,
                        p_iStartingEpisodeNumber,
                        p_iNumberOfPrograms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateEpisodeSlate(string p_sSessionId, string p_sNolaRoot, int p_iStartingEpisodeNumber, int p_iNumberOfPrograms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateEpisodeSlate", new object[] {
                        p_sSessionId,
                        p_sNolaRoot,
                        p_iStartingEpisodeNumber,
                        p_iNumberOfPrograms}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndValidateEpisodeSlate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateEpisodeSlateAsync(string p_sSessionId, string p_sNolaRoot, int p_iStartingEpisodeNumber, int p_iNumberOfPrograms) {
            this.ValidateEpisodeSlateAsync(p_sSessionId, p_sNolaRoot, p_iStartingEpisodeNumber, p_iNumberOfPrograms, null);
        }
        
        /// <remarks/>
        public void ValidateEpisodeSlateAsync(string p_sSessionId, string p_sNolaRoot, int p_iStartingEpisodeNumber, int p_iNumberOfPrograms, object userState) {
            if ((this.ValidateEpisodeSlateOperationCompleted == null)) {
                this.ValidateEpisodeSlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateEpisodeSlateOperationCompleted);
            }
            this.InvokeAsync("ValidateEpisodeSlate", new object[] {
                        p_sSessionId,
                        p_sNolaRoot,
                        p_iStartingEpisodeNumber,
                        p_iNumberOfPrograms}, this.ValidateEpisodeSlateOperationCompleted, userState);
        }
        
        private void OnValidateEpisodeSlateOperationCompleted(object arg) {
            if ((this.ValidateEpisodeSlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateEpisodeSlateCompleted(this, new ValidateEpisodeSlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadBillTo", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadBillTo() {
            object[] results = this.Invoke("LoadBillTo", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadBillTo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadBillTo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadBillTo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadBillToAsync() {
            this.LoadBillToAsync(null);
        }
        
        /// <remarks/>
        public void LoadBillToAsync(object userState) {
            if ((this.LoadBillToOperationCompleted == null)) {
                this.LoadBillToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadBillToOperationCompleted);
            }
            this.InvokeAsync("LoadBillTo", new object[0], this.LoadBillToOperationCompleted, userState);
        }
        
        private void OnLoadBillToOperationCompleted(object arg) {
            if ((this.LoadBillToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadBillToCompleted(this, new LoadBillToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadBillToContact", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadBillToContact() {
            object[] results = this.Invoke("LoadBillToContact", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadBillToContact(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadBillToContact", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadBillToContact(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadBillToContactAsync() {
            this.LoadBillToContactAsync(null);
        }
        
        /// <remarks/>
        public void LoadBillToContactAsync(object userState) {
            if ((this.LoadBillToContactOperationCompleted == null)) {
                this.LoadBillToContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadBillToContactOperationCompleted);
            }
            this.InvokeAsync("LoadBillToContact", new object[0], this.LoadBillToContactOperationCompleted, userState);
        }
        
        private void OnLoadBillToContactOperationCompleted(object arg) {
            if ((this.LoadBillToContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadBillToContactCompleted(this, new LoadBillToContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadCaptionVendor", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadCaptionVendor() {
            object[] results = this.Invoke("LoadCaptionVendor", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadCaptionVendor(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadCaptionVendor", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadCaptionVendor(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCaptionVendorAsync() {
            this.LoadCaptionVendorAsync(null);
        }
        
        /// <remarks/>
        public void LoadCaptionVendorAsync(object userState) {
            if ((this.LoadCaptionVendorOperationCompleted == null)) {
                this.LoadCaptionVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCaptionVendorOperationCompleted);
            }
            this.InvokeAsync("LoadCaptionVendor", new object[0], this.LoadCaptionVendorOperationCompleted, userState);
        }
        
        private void OnLoadCaptionVendorOperationCompleted(object arg) {
            if ((this.LoadCaptionVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCaptionVendorCompleted(this, new LoadCaptionVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadCompany", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadCompany() {
            object[] results = this.Invoke("LoadCompany", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadCompany(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadCompany", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadCompany(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCompanyAsync() {
            this.LoadCompanyAsync(null);
        }
        
        /// <remarks/>
        public void LoadCompanyAsync(object userState) {
            if ((this.LoadCompanyOperationCompleted == null)) {
                this.LoadCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCompanyOperationCompleted);
            }
            this.InvokeAsync("LoadCompany", new object[0], this.LoadCompanyOperationCompleted, userState);
        }
        
        private void OnLoadCompanyOperationCompleted(object arg) {
            if ((this.LoadCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCompanyCompleted(this, new LoadCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadContactType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadContactType() {
            object[] results = this.Invoke("LoadContactType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadContactType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadContactType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadContactType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadContactTypeAsync() {
            this.LoadContactTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadContactTypeAsync(object userState) {
            if ((this.LoadContactTypeOperationCompleted == null)) {
                this.LoadContactTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadContactTypeOperationCompleted);
            }
            this.InvokeAsync("LoadContactType", new object[0], this.LoadContactTypeOperationCompleted, userState);
        }
        
        private void OnLoadContactTypeOperationCompleted(object arg) {
            if ((this.LoadContactTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadContactTypeCompleted(this, new LoadContactTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadDisclaimer", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadDisclaimer() {
            object[] results = this.Invoke("LoadDisclaimer", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadDisclaimer(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadDisclaimer", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadDisclaimer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDisclaimerAsync() {
            this.LoadDisclaimerAsync(null);
        }
        
        /// <remarks/>
        public void LoadDisclaimerAsync(object userState) {
            if ((this.LoadDisclaimerOperationCompleted == null)) {
                this.LoadDisclaimerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDisclaimerOperationCompleted);
            }
            this.InvokeAsync("LoadDisclaimer", new object[0], this.LoadDisclaimerOperationCompleted, userState);
        }
        
        private void OnLoadDisclaimerOperationCompleted(object arg) {
            if ((this.LoadDisclaimerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDisclaimerCompleted(this, new LoadDisclaimerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadDistributors", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadDistributors() {
            object[] results = this.Invoke("LoadDistributors", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadDistributors(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadDistributors", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadDistributors(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDistributorsAsync() {
            this.LoadDistributorsAsync(null);
        }
        
        /// <remarks/>
        public void LoadDistributorsAsync(object userState) {
            if ((this.LoadDistributorsOperationCompleted == null)) {
                this.LoadDistributorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDistributorsOperationCompleted);
            }
            this.InvokeAsync("LoadDistributors", new object[0], this.LoadDistributorsOperationCompleted, userState);
        }
        
        private void OnLoadDistributorsOperationCompleted(object arg) {
            if ((this.LoadDistributorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDistributorsCompleted(this, new LoadDistributorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadFunders", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadFunders() {
            object[] results = this.Invoke("LoadFunders", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadFunders(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadFunders", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadFunders(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFundersAsync() {
            this.LoadFundersAsync(null);
        }
        
        /// <remarks/>
        public void LoadFundersAsync(object userState) {
            if ((this.LoadFundersOperationCompleted == null)) {
                this.LoadFundersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFundersOperationCompleted);
            }
            this.InvokeAsync("LoadFunders", new object[0], this.LoadFundersOperationCompleted, userState);
        }
        
        private void OnLoadFundersOperationCompleted(object arg) {
            if ((this.LoadFundersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFundersCompleted(this, new LoadFundersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadFunderType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadFunderType() {
            object[] results = this.Invoke("LoadFunderType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadFunderType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadFunderType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadFunderType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFunderTypeAsync() {
            this.LoadFunderTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadFunderTypeAsync(object userState) {
            if ((this.LoadFunderTypeOperationCompleted == null)) {
                this.LoadFunderTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFunderTypeOperationCompleted);
            }
            this.InvokeAsync("LoadFunderType", new object[0], this.LoadFunderTypeOperationCompleted, userState);
        }
        
        private void OnLoadFunderTypeOperationCompleted(object arg) {
            if ((this.LoadFunderTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFunderTypeCompleted(this, new LoadFunderTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadGenre", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadGenre() {
            object[] results = this.Invoke("LoadGenre", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadGenre(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadGenre", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadGenre(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadGenreAsync() {
            this.LoadGenreAsync(null);
        }
        
        /// <remarks/>
        public void LoadGenreAsync(object userState) {
            if ((this.LoadGenreOperationCompleted == null)) {
                this.LoadGenreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadGenreOperationCompleted);
            }
            this.InvokeAsync("LoadGenre", new object[0], this.LoadGenreOperationCompleted, userState);
        }
        
        private void OnLoadGenreOperationCompleted(object arg) {
            if ((this.LoadGenreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadGenreCompleted(this, new LoadGenreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadKeywords", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadKeywords() {
            object[] results = this.Invoke("LoadKeywords", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadKeywords(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadKeywords", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadKeywords(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadKeywordsAsync() {
            this.LoadKeywordsAsync(null);
        }
        
        /// <remarks/>
        public void LoadKeywordsAsync(object userState) {
            if ((this.LoadKeywordsOperationCompleted == null)) {
                this.LoadKeywordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadKeywordsOperationCompleted);
            }
            this.InvokeAsync("LoadKeywords", new object[0], this.LoadKeywordsOperationCompleted, userState);
        }
        
        private void OnLoadKeywordsOperationCompleted(object arg) {
            if ((this.LoadKeywordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadKeywordsCompleted(this, new LoadKeywordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadLanguage", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadLanguage() {
            object[] results = this.Invoke("LoadLanguage", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadLanguage(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadLanguage", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadLanguage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLanguageAsync() {
            this.LoadLanguageAsync(null);
        }
        
        /// <remarks/>
        public void LoadLanguageAsync(object userState) {
            if ((this.LoadLanguageOperationCompleted == null)) {
                this.LoadLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLanguageOperationCompleted);
            }
            this.InvokeAsync("LoadLanguage", new object[0], this.LoadLanguageOperationCompleted, userState);
        }
        
        private void OnLoadLanguageOperationCompleted(object arg) {
            if ((this.LoadLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLanguageCompleted(this, new LoadLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadLocalUnderwriting", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadLocalUnderwriting() {
            object[] results = this.Invoke("LoadLocalUnderwriting", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadLocalUnderwriting(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadLocalUnderwriting", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadLocalUnderwriting(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLocalUnderwritingAsync() {
            this.LoadLocalUnderwritingAsync(null);
        }
        
        /// <remarks/>
        public void LoadLocalUnderwritingAsync(object userState) {
            if ((this.LoadLocalUnderwritingOperationCompleted == null)) {
                this.LoadLocalUnderwritingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLocalUnderwritingOperationCompleted);
            }
            this.InvokeAsync("LoadLocalUnderwriting", new object[0], this.LoadLocalUnderwritingOperationCompleted, userState);
        }
        
        private void OnLoadLocalUnderwritingOperationCompleted(object arg) {
            if ((this.LoadLocalUnderwritingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLocalUnderwritingCompleted(this, new LoadLocalUnderwritingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadPBSProgramType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadPBSProgramType() {
            object[] results = this.Invoke("LoadPBSProgramType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadPBSProgramType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadPBSProgramType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadPBSProgramType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPBSProgramTypeAsync() {
            this.LoadPBSProgramTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadPBSProgramTypeAsync(object userState) {
            if ((this.LoadPBSProgramTypeOperationCompleted == null)) {
                this.LoadPBSProgramTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPBSProgramTypeOperationCompleted);
            }
            this.InvokeAsync("LoadPBSProgramType", new object[0], this.LoadPBSProgramTypeOperationCompleted, userState);
        }
        
        private void OnLoadPBSProgramTypeOperationCompleted(object arg) {
            if ((this.LoadPBSProgramTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPBSProgramTypeCompleted(this, new LoadPBSProgramTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadPlayRule", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadPlayRule() {
            object[] results = this.Invoke("LoadPlayRule", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadPlayRule(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadPlayRule", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadPlayRule(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPlayRuleAsync() {
            this.LoadPlayRuleAsync(null);
        }
        
        /// <remarks/>
        public void LoadPlayRuleAsync(object userState) {
            if ((this.LoadPlayRuleOperationCompleted == null)) {
                this.LoadPlayRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPlayRuleOperationCompleted);
            }
            this.InvokeAsync("LoadPlayRule", new object[0], this.LoadPlayRuleOperationCompleted, userState);
        }
        
        private void OnLoadPlayRuleOperationCompleted(object arg) {
            if ((this.LoadPlayRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPlayRuleCompleted(this, new LoadPlayRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadProgramType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadProgramType() {
            object[] results = this.Invoke("LoadProgramType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadProgramType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadProgramType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadProgramType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadProgramTypeAsync() {
            this.LoadProgramTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadProgramTypeAsync(object userState) {
            if ((this.LoadProgramTypeOperationCompleted == null)) {
                this.LoadProgramTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProgramTypeOperationCompleted);
            }
            this.InvokeAsync("LoadProgramType", new object[0], this.LoadProgramTypeOperationCompleted, userState);
        }
        
        private void OnLoadProgramTypeOperationCompleted(object arg) {
            if ((this.LoadProgramTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProgramTypeCompleted(this, new LoadProgramTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadRating", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadRating() {
            object[] results = this.Invoke("LoadRating", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadRating(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadRating", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadRating(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRatingAsync() {
            this.LoadRatingAsync(null);
        }
        
        /// <remarks/>
        public void LoadRatingAsync(object userState) {
            if ((this.LoadRatingOperationCompleted == null)) {
                this.LoadRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRatingOperationCompleted);
            }
            this.InvokeAsync("LoadRating", new object[0], this.LoadRatingOperationCompleted, userState);
        }
        
        private void OnLoadRatingOperationCompleted(object arg) {
            if ((this.LoadRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRatingCompleted(this, new LoadRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadSchoolRights", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadSchoolRights() {
            object[] results = this.Invoke("LoadSchoolRights", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadSchoolRights(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadSchoolRights", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadSchoolRights(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSchoolRightsAsync() {
            this.LoadSchoolRightsAsync(null);
        }
        
        /// <remarks/>
        public void LoadSchoolRightsAsync(object userState) {
            if ((this.LoadSchoolRightsOperationCompleted == null)) {
                this.LoadSchoolRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSchoolRightsOperationCompleted);
            }
            this.InvokeAsync("LoadSchoolRights", new object[0], this.LoadSchoolRightsOperationCompleted, userState);
        }
        
        private void OnLoadSchoolRightsOperationCompleted(object arg) {
            if ((this.LoadSchoolRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSchoolRightsCompleted(this, new LoadSchoolRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadUplinks", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadUplinks() {
            object[] results = this.Invoke("LoadUplinks", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadUplinks(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadUplinks", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadUplinks(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadUplinksAsync() {
            this.LoadUplinksAsync(null);
        }
        
        /// <remarks/>
        public void LoadUplinksAsync(object userState) {
            if ((this.LoadUplinksOperationCompleted == null)) {
                this.LoadUplinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadUplinksOperationCompleted);
            }
            this.InvokeAsync("LoadUplinks", new object[0], this.LoadUplinksOperationCompleted, userState);
        }
        
        private void OnLoadUplinksOperationCompleted(object arg) {
            if ((this.LoadUplinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadUplinksCompleted(this, new LoadUplinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadVersionFormatAndType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadVersionFormatAndType() {
            object[] results = this.Invoke("LoadVersionFormatAndType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadVersionFormatAndType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadVersionFormatAndType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadVersionFormatAndType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadVersionFormatAndTypeAsync() {
            this.LoadVersionFormatAndTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadVersionFormatAndTypeAsync(object userState) {
            if ((this.LoadVersionFormatAndTypeOperationCompleted == null)) {
                this.LoadVersionFormatAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadVersionFormatAndTypeOperationCompleted);
            }
            this.InvokeAsync("LoadVersionFormatAndType", new object[0], this.LoadVersionFormatAndTypeOperationCompleted, userState);
        }
        
        private void OnLoadVersionFormatAndTypeOperationCompleted(object arg) {
            if ((this.LoadVersionFormatAndTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadVersionFormatAndTypeCompleted(this, new LoadVersionFormatAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadAudioType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadAudioType() {
            object[] results = this.Invoke("LoadAudioType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAudioType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAudioType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadAudioType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAudioTypeAsync() {
            this.LoadAudioTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadAudioTypeAsync(object userState) {
            if ((this.LoadAudioTypeOperationCompleted == null)) {
                this.LoadAudioTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAudioTypeOperationCompleted);
            }
            this.InvokeAsync("LoadAudioType", new object[0], this.LoadAudioTypeOperationCompleted, userState);
        }
        
        private void OnLoadAudioTypeOperationCompleted(object arg) {
            if ((this.LoadAudioTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAudioTypeCompleted(this, new LoadAudioTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadTalentRoles", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadTalentRoles() {
            object[] results = this.Invoke("LoadTalentRoles", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadTalentRoles(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadTalentRoles", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadTalentRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTalentRolesAsync() {
            this.LoadTalentRolesAsync(null);
        }
        
        /// <remarks/>
        public void LoadTalentRolesAsync(object userState) {
            if ((this.LoadTalentRolesOperationCompleted == null)) {
                this.LoadTalentRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTalentRolesOperationCompleted);
            }
            this.InvokeAsync("LoadTalentRoles", new object[0], this.LoadTalentRolesOperationCompleted, userState);
        }
        
        private void OnLoadTalentRolesOperationCompleted(object arg) {
            if ((this.LoadTalentRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTalentRolesCompleted(this, new LoadTalentRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadSurroundSoundType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadSurroundSoundType() {
            object[] results = this.Invoke("LoadSurroundSoundType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadSurroundSoundType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadSurroundSoundType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadSurroundSoundType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSurroundSoundTypeAsync() {
            this.LoadSurroundSoundTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadSurroundSoundTypeAsync(object userState) {
            if ((this.LoadSurroundSoundTypeOperationCompleted == null)) {
                this.LoadSurroundSoundTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSurroundSoundTypeOperationCompleted);
            }
            this.InvokeAsync("LoadSurroundSoundType", new object[0], this.LoadSurroundSoundTypeOperationCompleted, userState);
        }
        
        private void OnLoadSurroundSoundTypeOperationCompleted(object arg) {
            if ((this.LoadSurroundSoundTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSurroundSoundTypeCompleted(this, new LoadSurroundSoundTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadAspectRatioType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadAspectRatioType() {
            object[] results = this.Invoke("LoadAspectRatioType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAspectRatioType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAspectRatioType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadAspectRatioType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAspectRatioTypeAsync() {
            this.LoadAspectRatioTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadAspectRatioTypeAsync(object userState) {
            if ((this.LoadAspectRatioTypeOperationCompleted == null)) {
                this.LoadAspectRatioTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAspectRatioTypeOperationCompleted);
            }
            this.InvokeAsync("LoadAspectRatioType", new object[0], this.LoadAspectRatioTypeOperationCompleted, userState);
        }
        
        private void OnLoadAspectRatioTypeOperationCompleted(object arg) {
            if ((this.LoadAspectRatioTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAspectRatioTypeCompleted(this, new LoadAspectRatioTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadAssetCategory", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadAssetCategory() {
            object[] results = this.Invoke("LoadAssetCategory", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAssetCategory(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAssetCategory", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadAssetCategory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAssetCategoryAsync() {
            this.LoadAssetCategoryAsync(null);
        }
        
        /// <remarks/>
        public void LoadAssetCategoryAsync(object userState) {
            if ((this.LoadAssetCategoryOperationCompleted == null)) {
                this.LoadAssetCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAssetCategoryOperationCompleted);
            }
            this.InvokeAsync("LoadAssetCategory", new object[0], this.LoadAssetCategoryOperationCompleted, userState);
        }
        
        private void OnLoadAssetCategoryOperationCompleted(object arg) {
            if ((this.LoadAssetCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAssetCategoryCompleted(this, new LoadAssetCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadHighDefType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadHighDefType() {
            object[] results = this.Invoke("LoadHighDefType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadHighDefType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadHighDefType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadHighDefType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadHighDefTypeAsync() {
            this.LoadHighDefTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadHighDefTypeAsync(object userState) {
            if ((this.LoadHighDefTypeOperationCompleted == null)) {
                this.LoadHighDefTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadHighDefTypeOperationCompleted);
            }
            this.InvokeAsync("LoadHighDefType", new object[0], this.LoadHighDefTypeOperationCompleted, userState);
        }
        
        private void OnLoadHighDefTypeOperationCompleted(object arg) {
            if ((this.LoadHighDefTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadHighDefTypeCompleted(this, new LoadHighDefTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadVideoFormat", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadVideoFormat() {
            object[] results = this.Invoke("LoadVideoFormat", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadVideoFormat(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadVideoFormat", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadVideoFormat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadVideoFormatAsync() {
            this.LoadVideoFormatAsync(null);
        }
        
        /// <remarks/>
        public void LoadVideoFormatAsync(object userState) {
            if ((this.LoadVideoFormatOperationCompleted == null)) {
                this.LoadVideoFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadVideoFormatOperationCompleted);
            }
            this.InvokeAsync("LoadVideoFormat", new object[0], this.LoadVideoFormatOperationCompleted, userState);
        }
        
        private void OnLoadVideoFormatOperationCompleted(object arg) {
            if ((this.LoadVideoFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadVideoFormatCompleted(this, new LoadVideoFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadMediaFeatureClass", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadMediaFeatureClass() {
            object[] results = this.Invoke("LoadMediaFeatureClass", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadMediaFeatureClass(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadMediaFeatureClass", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadMediaFeatureClass(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMediaFeatureClassAsync() {
            this.LoadMediaFeatureClassAsync(null);
        }
        
        /// <remarks/>
        public void LoadMediaFeatureClassAsync(object userState) {
            if ((this.LoadMediaFeatureClassOperationCompleted == null)) {
                this.LoadMediaFeatureClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMediaFeatureClassOperationCompleted);
            }
            this.InvokeAsync("LoadMediaFeatureClass", new object[0], this.LoadMediaFeatureClassOperationCompleted, userState);
        }
        
        private void OnLoadMediaFeatureClassOperationCompleted(object arg) {
            if ((this.LoadMediaFeatureClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMediaFeatureClassCompleted(this, new LoadMediaFeatureClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadCutItemType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadCutItemType() {
            object[] results = this.Invoke("LoadCutItemType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadCutItemType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadCutItemType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadCutItemType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCutItemTypeAsync() {
            this.LoadCutItemTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadCutItemTypeAsync(object userState) {
            if ((this.LoadCutItemTypeOperationCompleted == null)) {
                this.LoadCutItemTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCutItemTypeOperationCompleted);
            }
            this.InvokeAsync("LoadCutItemType", new object[0], this.LoadCutItemTypeOperationCompleted, userState);
        }
        
        private void OnLoadCutItemTypeOperationCompleted(object arg) {
            if ((this.LoadCutItemTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCutItemTypeCompleted(this, new LoadCutItemTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadMediaFormatType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadMediaFormatType() {
            object[] results = this.Invoke("LoadMediaFormatType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadMediaFormatType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadMediaFormatType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadMediaFormatType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMediaFormatTypeAsync() {
            this.LoadMediaFormatTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadMediaFormatTypeAsync(object userState) {
            if ((this.LoadMediaFormatTypeOperationCompleted == null)) {
                this.LoadMediaFormatTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMediaFormatTypeOperationCompleted);
            }
            this.InvokeAsync("LoadMediaFormatType", new object[0], this.LoadMediaFormatTypeOperationCompleted, userState);
        }
        
        private void OnLoadMediaFormatTypeOperationCompleted(object arg) {
            if ((this.LoadMediaFormatTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMediaFormatTypeCompleted(this, new LoadMediaFormatTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadMediaInventoryType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadMediaInventoryType() {
            object[] results = this.Invoke("LoadMediaInventoryType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadMediaInventoryType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadMediaInventoryType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadMediaInventoryType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMediaInventoryTypeAsync() {
            this.LoadMediaInventoryTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadMediaInventoryTypeAsync(object userState) {
            if ((this.LoadMediaInventoryTypeOperationCompleted == null)) {
                this.LoadMediaInventoryTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMediaInventoryTypeOperationCompleted);
            }
            this.InvokeAsync("LoadMediaInventoryType", new object[0], this.LoadMediaInventoryTypeOperationCompleted, userState);
        }
        
        private void OnLoadMediaInventoryTypeOperationCompleted(object arg) {
            if ((this.LoadMediaInventoryTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMediaInventoryTypeCompleted(this, new LoadMediaInventoryTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadMediaStatus", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadMediaStatus() {
            object[] results = this.Invoke("LoadMediaStatus", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadMediaStatus(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadMediaStatus", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadMediaStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMediaStatusAsync() {
            this.LoadMediaStatusAsync(null);
        }
        
        /// <remarks/>
        public void LoadMediaStatusAsync(object userState) {
            if ((this.LoadMediaStatusOperationCompleted == null)) {
                this.LoadMediaStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMediaStatusOperationCompleted);
            }
            this.InvokeAsync("LoadMediaStatus", new object[0], this.LoadMediaStatusOperationCompleted, userState);
        }
        
        private void OnLoadMediaStatusOperationCompleted(object arg) {
            if ((this.LoadMediaStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMediaStatusCompleted(this, new LoadMediaStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadMediaFeature", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadMediaFeature() {
            object[] results = this.Invoke("LoadMediaFeature", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadMediaFeature(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadMediaFeature", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadMediaFeature(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMediaFeatureAsync() {
            this.LoadMediaFeatureAsync(null);
        }
        
        /// <remarks/>
        public void LoadMediaFeatureAsync(object userState) {
            if ((this.LoadMediaFeatureOperationCompleted == null)) {
                this.LoadMediaFeatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMediaFeatureOperationCompleted);
            }
            this.InvokeAsync("LoadMediaFeature", new object[0], this.LoadMediaFeatureOperationCompleted, userState);
        }
        
        private void OnLoadMediaFeatureOperationCompleted(object arg) {
            if ((this.LoadMediaFeatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMediaFeatureCompleted(this, new LoadMediaFeatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadPackageType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadPackageType() {
            object[] results = this.Invoke("LoadPackageType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadPackageType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadPackageType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadPackageType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPackageTypeAsync() {
            this.LoadPackageTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadPackageTypeAsync(object userState) {
            if ((this.LoadPackageTypeOperationCompleted == null)) {
                this.LoadPackageTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPackageTypeOperationCompleted);
            }
            this.InvokeAsync("LoadPackageType", new object[0], this.LoadPackageTypeOperationCompleted, userState);
        }
        
        private void OnLoadPackageTypeOperationCompleted(object arg) {
            if ((this.LoadPackageTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPackageTypeCompleted(this, new LoadPackageTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadOacPreOfferDescriptio" +
            "nType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadOacPreOfferDescriptionType() {
            object[] results = this.Invoke("LoadOacPreOfferDescriptionType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadOacPreOfferDescriptionType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadOacPreOfferDescriptionType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadOacPreOfferDescriptionType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOacPreOfferDescriptionTypeAsync() {
            this.LoadOacPreOfferDescriptionTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadOacPreOfferDescriptionTypeAsync(object userState) {
            if ((this.LoadOacPreOfferDescriptionTypeOperationCompleted == null)) {
                this.LoadOacPreOfferDescriptionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOacPreOfferDescriptionTypeOperationCompleted);
            }
            this.InvokeAsync("LoadOacPreOfferDescriptionType", new object[0], this.LoadOacPreOfferDescriptionTypeOperationCompleted, userState);
        }
        
        private void OnLoadOacPreOfferDescriptionTypeOperationCompleted(object arg) {
            if ((this.LoadOacPreOfferDescriptionTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOacPreOfferDescriptionTypeCompleted(this, new LoadOacPreOfferDescriptionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadOacPostOfferDescripti" +
            "onType", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadOacPostOfferDescriptionType() {
            object[] results = this.Invoke("LoadOacPostOfferDescriptionType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadOacPostOfferDescriptionType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadOacPostOfferDescriptionType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadOacPostOfferDescriptionType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOacPostOfferDescriptionTypeAsync() {
            this.LoadOacPostOfferDescriptionTypeAsync(null);
        }
        
        /// <remarks/>
        public void LoadOacPostOfferDescriptionTypeAsync(object userState) {
            if ((this.LoadOacPostOfferDescriptionTypeOperationCompleted == null)) {
                this.LoadOacPostOfferDescriptionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOacPostOfferDescriptionTypeOperationCompleted);
            }
            this.InvokeAsync("LoadOacPostOfferDescriptionType", new object[0], this.LoadOacPostOfferDescriptionTypeOperationCompleted, userState);
        }
        
        private void OnLoadOacPostOfferDescriptionTypeOperationCompleted(object arg) {
            if ((this.LoadOacPostOfferDescriptionTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOacPostOfferDescriptionTypeCompleted(this, new LoadOacPostOfferDescriptionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadVChipValues", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadVChipValues() {
            object[] results = this.Invoke("LoadVChipValues", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadVChipValues(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadVChipValues", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadVChipValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadVChipValuesAsync() {
            this.LoadVChipValuesAsync(null);
        }
        
        /// <remarks/>
        public void LoadVChipValuesAsync(object userState) {
            if ((this.LoadVChipValuesOperationCompleted == null)) {
                this.LoadVChipValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadVChipValuesOperationCompleted);
            }
            this.InvokeAsync("LoadVChipValues", new object[0], this.LoadVChipValuesOperationCompleted, userState);
        }
        
        private void OnLoadVChipValuesOperationCompleted(object arg) {
            if ((this.LoadVChipValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadVChipValuesCompleted(this, new LoadVChipValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadAlliantContractModels" +
            "", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadAlliantContractModels() {
            object[] results = this.Invoke("LoadAlliantContractModels", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAlliantContractModels(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAlliantContractModels", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadAlliantContractModels(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAlliantContractModelsAsync() {
            this.LoadAlliantContractModelsAsync(null);
        }
        
        /// <remarks/>
        public void LoadAlliantContractModelsAsync(object userState) {
            if ((this.LoadAlliantContractModelsOperationCompleted == null)) {
                this.LoadAlliantContractModelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAlliantContractModelsOperationCompleted);
            }
            this.InvokeAsync("LoadAlliantContractModels", new object[0], this.LoadAlliantContractModelsOperationCompleted, userState);
        }
        
        private void OnLoadAlliantContractModelsOperationCompleted(object arg) {
            if ((this.LoadAlliantContractModelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAlliantContractModelsCompleted(this, new LoadAlliantContractModelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/LoadStations", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadStations() {
            object[] results = this.Invoke("LoadStations", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadStations(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadStations", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadStations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadStationsAsync() {
            this.LoadStationsAsync(null);
        }
        
        /// <remarks/>
        public void LoadStationsAsync(object userState) {
            if ((this.LoadStationsOperationCompleted == null)) {
                this.LoadStationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadStationsOperationCompleted);
            }
            this.InvokeAsync("LoadStations", new object[0], this.LoadStationsOperationCompleted, userState);
        }
        
        private void OnLoadStationsOperationCompleted(object arg) {
            if ((this.LoadStationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadStationsCompleted(this, new LoadStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/CreateProgram", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateProgram(
                    string strSessionID, 
                    int nMasterDealID, 
                    string strMasterDealTitle, 
                    string strSeason, 
                    int nDealID, 
                    string strDealDesc, 
                    string strDealSynopsis, 
                    int nPBSProgramTypeID, 
                    int nUpLinkID, 
                    int[] nProgramIDs, 
                    int nProgramTypeID, 
                    int nDuration, 
                    string strNolaRoot, 
                    int nFirstEpisodeNumber, 
                    int nIncrement, 
                    int nDistributorID, 
                    int nGenreID, 
                    bool bLive, 
                    bool bRecord, 
                    int nDefaultRatingID, 
                    int nDisclaimerID, 
                    string strFirstPictureLockDate, 
                    int nOperatingUnit, 
                    string strOperatingGroup, 
                    Packages[] cPackages, 
                    int nAssetVChipID, 
                    string sAssetEpisodeTitle, 
                    string sAssetTitleString, 
                    bool p_bIsFinalTitle, 
                    bool p_bSDRightsFlag, 
                    bool p_bHDRightsFlag) {
            this.Invoke("CreateProgram", new object[] {
                        strSessionID,
                        nMasterDealID,
                        strMasterDealTitle,
                        strSeason,
                        nDealID,
                        strDealDesc,
                        strDealSynopsis,
                        nPBSProgramTypeID,
                        nUpLinkID,
                        nProgramIDs,
                        nProgramTypeID,
                        nDuration,
                        strNolaRoot,
                        nFirstEpisodeNumber,
                        nIncrement,
                        nDistributorID,
                        nGenreID,
                        bLive,
                        bRecord,
                        nDefaultRatingID,
                        nDisclaimerID,
                        strFirstPictureLockDate,
                        nOperatingUnit,
                        strOperatingGroup,
                        cPackages,
                        nAssetVChipID,
                        sAssetEpisodeTitle,
                        sAssetTitleString,
                        p_bIsFinalTitle,
                        p_bSDRightsFlag,
                        p_bHDRightsFlag});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateProgram(
                    string strSessionID, 
                    int nMasterDealID, 
                    string strMasterDealTitle, 
                    string strSeason, 
                    int nDealID, 
                    string strDealDesc, 
                    string strDealSynopsis, 
                    int nPBSProgramTypeID, 
                    int nUpLinkID, 
                    int[] nProgramIDs, 
                    int nProgramTypeID, 
                    int nDuration, 
                    string strNolaRoot, 
                    int nFirstEpisodeNumber, 
                    int nIncrement, 
                    int nDistributorID, 
                    int nGenreID, 
                    bool bLive, 
                    bool bRecord, 
                    int nDefaultRatingID, 
                    int nDisclaimerID, 
                    string strFirstPictureLockDate, 
                    int nOperatingUnit, 
                    string strOperatingGroup, 
                    Packages[] cPackages, 
                    int nAssetVChipID, 
                    string sAssetEpisodeTitle, 
                    string sAssetTitleString, 
                    bool p_bIsFinalTitle, 
                    bool p_bSDRightsFlag, 
                    bool p_bHDRightsFlag, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CreateProgram", new object[] {
                        strSessionID,
                        nMasterDealID,
                        strMasterDealTitle,
                        strSeason,
                        nDealID,
                        strDealDesc,
                        strDealSynopsis,
                        nPBSProgramTypeID,
                        nUpLinkID,
                        nProgramIDs,
                        nProgramTypeID,
                        nDuration,
                        strNolaRoot,
                        nFirstEpisodeNumber,
                        nIncrement,
                        nDistributorID,
                        nGenreID,
                        bLive,
                        bRecord,
                        nDefaultRatingID,
                        nDisclaimerID,
                        strFirstPictureLockDate,
                        nOperatingUnit,
                        strOperatingGroup,
                        cPackages,
                        nAssetVChipID,
                        sAssetEpisodeTitle,
                        sAssetTitleString,
                        p_bIsFinalTitle,
                        p_bSDRightsFlag,
                        p_bHDRightsFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateProgram(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateProgramAsync(
                    string strSessionID, 
                    int nMasterDealID, 
                    string strMasterDealTitle, 
                    string strSeason, 
                    int nDealID, 
                    string strDealDesc, 
                    string strDealSynopsis, 
                    int nPBSProgramTypeID, 
                    int nUpLinkID, 
                    int[] nProgramIDs, 
                    int nProgramTypeID, 
                    int nDuration, 
                    string strNolaRoot, 
                    int nFirstEpisodeNumber, 
                    int nIncrement, 
                    int nDistributorID, 
                    int nGenreID, 
                    bool bLive, 
                    bool bRecord, 
                    int nDefaultRatingID, 
                    int nDisclaimerID, 
                    string strFirstPictureLockDate, 
                    int nOperatingUnit, 
                    string strOperatingGroup, 
                    Packages[] cPackages, 
                    int nAssetVChipID, 
                    string sAssetEpisodeTitle, 
                    string sAssetTitleString, 
                    bool p_bIsFinalTitle, 
                    bool p_bSDRightsFlag, 
                    bool p_bHDRightsFlag) {
            this.CreateProgramAsync(strSessionID, nMasterDealID, strMasterDealTitle, strSeason, nDealID, strDealDesc, strDealSynopsis, nPBSProgramTypeID, nUpLinkID, nProgramIDs, nProgramTypeID, nDuration, strNolaRoot, nFirstEpisodeNumber, nIncrement, nDistributorID, nGenreID, bLive, bRecord, nDefaultRatingID, nDisclaimerID, strFirstPictureLockDate, nOperatingUnit, strOperatingGroup, cPackages, nAssetVChipID, sAssetEpisodeTitle, sAssetTitleString, p_bIsFinalTitle, p_bSDRightsFlag, p_bHDRightsFlag, null);
        }
        
        /// <remarks/>
        public void CreateProgramAsync(
                    string strSessionID, 
                    int nMasterDealID, 
                    string strMasterDealTitle, 
                    string strSeason, 
                    int nDealID, 
                    string strDealDesc, 
                    string strDealSynopsis, 
                    int nPBSProgramTypeID, 
                    int nUpLinkID, 
                    int[] nProgramIDs, 
                    int nProgramTypeID, 
                    int nDuration, 
                    string strNolaRoot, 
                    int nFirstEpisodeNumber, 
                    int nIncrement, 
                    int nDistributorID, 
                    int nGenreID, 
                    bool bLive, 
                    bool bRecord, 
                    int nDefaultRatingID, 
                    int nDisclaimerID, 
                    string strFirstPictureLockDate, 
                    int nOperatingUnit, 
                    string strOperatingGroup, 
                    Packages[] cPackages, 
                    int nAssetVChipID, 
                    string sAssetEpisodeTitle, 
                    string sAssetTitleString, 
                    bool p_bIsFinalTitle, 
                    bool p_bSDRightsFlag, 
                    bool p_bHDRightsFlag, 
                    object userState) {
            if ((this.CreateProgramOperationCompleted == null)) {
                this.CreateProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProgramOperationCompleted);
            }
            this.InvokeAsync("CreateProgram", new object[] {
                        strSessionID,
                        nMasterDealID,
                        strMasterDealTitle,
                        strSeason,
                        nDealID,
                        strDealDesc,
                        strDealSynopsis,
                        nPBSProgramTypeID,
                        nUpLinkID,
                        nProgramIDs,
                        nProgramTypeID,
                        nDuration,
                        strNolaRoot,
                        nFirstEpisodeNumber,
                        nIncrement,
                        nDistributorID,
                        nGenreID,
                        bLive,
                        bRecord,
                        nDefaultRatingID,
                        nDisclaimerID,
                        strFirstPictureLockDate,
                        nOperatingUnit,
                        strOperatingGroup,
                        cPackages,
                        nAssetVChipID,
                        sAssetEpisodeTitle,
                        sAssetTitleString,
                        p_bIsFinalTitle,
                        p_bSDRightsFlag,
                        p_bHDRightsFlag}, this.CreateProgramOperationCompleted, userState);
        }
        
        private void OnCreateProgramOperationCompleted(object arg) {
            if ((this.CreateProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProgramCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ListProgramByDeal", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListProgramByDeal(string strSessionID, int nDealID) {
            object[] results = this.Invoke("ListProgramByDeal", new object[] {
                        strSessionID,
                        nDealID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListProgramByDeal(string strSessionID, int nDealID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListProgramByDeal", new object[] {
                        strSessionID,
                        nDealID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListProgramByDeal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListProgramByDealAsync(string strSessionID, int nDealID) {
            this.ListProgramByDealAsync(strSessionID, nDealID, null);
        }
        
        /// <remarks/>
        public void ListProgramByDealAsync(string strSessionID, int nDealID, object userState) {
            if ((this.ListProgramByDealOperationCompleted == null)) {
                this.ListProgramByDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListProgramByDealOperationCompleted);
            }
            this.InvokeAsync("ListProgramByDeal", new object[] {
                        strSessionID,
                        nDealID}, this.ListProgramByDealOperationCompleted, userState);
        }
        
        private void OnListProgramByDealOperationCompleted(object arg) {
            if ((this.ListProgramByDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListProgramByDealCompleted(this, new ListProgramByDealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ListProgramPackagesByProg" +
            "ram", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListProgramPackagesByProgram(string strSessionID, int nProgramID) {
            object[] results = this.Invoke("ListProgramPackagesByProgram", new object[] {
                        strSessionID,
                        nProgramID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListProgramPackagesByProgram(string strSessionID, int nProgramID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListProgramPackagesByProgram", new object[] {
                        strSessionID,
                        nProgramID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListProgramPackagesByProgram(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListProgramPackagesByProgramAsync(string strSessionID, int nProgramID) {
            this.ListProgramPackagesByProgramAsync(strSessionID, nProgramID, null);
        }
        
        /// <remarks/>
        public void ListProgramPackagesByProgramAsync(string strSessionID, int nProgramID, object userState) {
            if ((this.ListProgramPackagesByProgramOperationCompleted == null)) {
                this.ListProgramPackagesByProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListProgramPackagesByProgramOperationCompleted);
            }
            this.InvokeAsync("ListProgramPackagesByProgram", new object[] {
                        strSessionID,
                        nProgramID}, this.ListProgramPackagesByProgramOperationCompleted, userState);
        }
        
        private void OnListProgramPackagesByProgramOperationCompleted(object arg) {
            if ((this.ListProgramPackagesByProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListProgramPackagesByProgramCompleted(this, new ListProgramPackagesByProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/ListDealsByMasterDeal", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListDealsByMasterDeal(string strSessionID, int nDealID) {
            object[] results = this.Invoke("ListDealsByMasterDeal", new object[] {
                        strSessionID,
                        nDealID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListDealsByMasterDeal(string strSessionID, int nDealID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListDealsByMasterDeal", new object[] {
                        strSessionID,
                        nDealID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListDealsByMasterDeal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListDealsByMasterDealAsync(string strSessionID, int nDealID) {
            this.ListDealsByMasterDealAsync(strSessionID, nDealID, null);
        }
        
        /// <remarks/>
        public void ListDealsByMasterDealAsync(string strSessionID, int nDealID, object userState) {
            if ((this.ListDealsByMasterDealOperationCompleted == null)) {
                this.ListDealsByMasterDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListDealsByMasterDealOperationCompleted);
            }
            this.InvokeAsync("ListDealsByMasterDeal", new object[] {
                        strSessionID,
                        nDealID}, this.ListDealsByMasterDealOperationCompleted, userState);
        }
        
        private void OnListDealsByMasterDealOperationCompleted(object arg) {
            if ((this.ListDealsByMasterDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListDealsByMasterDealCompleted(this, new ListDealsByMasterDealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetProgramDetails", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProgramDetails(string strSessionID, int nProgramID, bool bLockFlag, bool bGetPremiereDate, out string strLockID) {
            object[] results = this.Invoke("GetProgramDetails", new object[] {
                        strSessionID,
                        nProgramID,
                        bLockFlag,
                        bGetPremiereDate});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProgramDetails(string strSessionID, int nProgramID, bool bLockFlag, bool bGetPremiereDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProgramDetails", new object[] {
                        strSessionID,
                        nProgramID,
                        bLockFlag,
                        bGetPremiereDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetProgramDetails(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramDetailsAsync(string strSessionID, int nProgramID, bool bLockFlag, bool bGetPremiereDate) {
            this.GetProgramDetailsAsync(strSessionID, nProgramID, bLockFlag, bGetPremiereDate, null);
        }
        
        /// <remarks/>
        public void GetProgramDetailsAsync(string strSessionID, int nProgramID, bool bLockFlag, bool bGetPremiereDate, object userState) {
            if ((this.GetProgramDetailsOperationCompleted == null)) {
                this.GetProgramDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramDetailsOperationCompleted);
            }
            this.InvokeAsync("GetProgramDetails", new object[] {
                        strSessionID,
                        nProgramID,
                        bLockFlag,
                        bGetPremiereDate}, this.GetProgramDetailsOperationCompleted, userState);
        }
        
        private void OnGetProgramDetailsOperationCompleted(object arg) {
            if ((this.GetProgramDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramDetailsCompleted(this, new GetProgramDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutProgramDetails", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutProgramDetails(string strSessionID, int nProgramID, string strLockID, System.Data.DataSet dsDeal) {
            this.Invoke("PutProgramDetails", new object[] {
                        strSessionID,
                        nProgramID,
                        strLockID,
                        dsDeal});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutProgramDetails(string strSessionID, int nProgramID, string strLockID, System.Data.DataSet dsDeal, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutProgramDetails", new object[] {
                        strSessionID,
                        nProgramID,
                        strLockID,
                        dsDeal}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutProgramDetails(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutProgramDetailsAsync(string strSessionID, int nProgramID, string strLockID, System.Data.DataSet dsDeal) {
            this.PutProgramDetailsAsync(strSessionID, nProgramID, strLockID, dsDeal, null);
        }
        
        /// <remarks/>
        public void PutProgramDetailsAsync(string strSessionID, int nProgramID, string strLockID, System.Data.DataSet dsDeal, object userState) {
            if ((this.PutProgramDetailsOperationCompleted == null)) {
                this.PutProgramDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutProgramDetailsOperationCompleted);
            }
            this.InvokeAsync("PutProgramDetails", new object[] {
                        strSessionID,
                        nProgramID,
                        strLockID,
                        dsDeal}, this.PutProgramDetailsOperationCompleted, userState);
        }
        
        private void OnPutProgramDetailsOperationCompleted(object arg) {
            if ((this.PutProgramDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutProgramDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetTalent", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("dEpisodeAppTo")]
        public System.Data.DataSet GetTalent(string strSessionID, int nDealID, int nTalentID, int nRoleID, out System.Data.DataSet dEpisodeTalent, out System.Data.DataSet dTalent) {
            object[] results = this.Invoke("GetTalent", new object[] {
                        strSessionID,
                        nDealID,
                        nTalentID,
                        nRoleID});
            dEpisodeTalent = ((System.Data.DataSet)(results[1]));
            dTalent = ((System.Data.DataSet)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTalent(string strSessionID, int nDealID, int nTalentID, int nRoleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTalent", new object[] {
                        strSessionID,
                        nDealID,
                        nTalentID,
                        nRoleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTalent(System.IAsyncResult asyncResult, out System.Data.DataSet dEpisodeTalent, out System.Data.DataSet dTalent) {
            object[] results = this.EndInvoke(asyncResult);
            dEpisodeTalent = ((System.Data.DataSet)(results[1]));
            dTalent = ((System.Data.DataSet)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTalentAsync(string strSessionID, int nDealID, int nTalentID, int nRoleID) {
            this.GetTalentAsync(strSessionID, nDealID, nTalentID, nRoleID, null);
        }
        
        /// <remarks/>
        public void GetTalentAsync(string strSessionID, int nDealID, int nTalentID, int nRoleID, object userState) {
            if ((this.GetTalentOperationCompleted == null)) {
                this.GetTalentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTalentOperationCompleted);
            }
            this.InvokeAsync("GetTalent", new object[] {
                        strSessionID,
                        nDealID,
                        nTalentID,
                        nRoleID}, this.GetTalentOperationCompleted, userState);
        }
        
        private void OnGetTalentOperationCompleted(object arg) {
            if ((this.GetTalentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTalentCompleted(this, new GetTalentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutTalent", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutTalent(string strSessionID, System.Data.DataSet dEpisodeTalent, System.Data.DataSet dTalent) {
            this.Invoke("PutTalent", new object[] {
                        strSessionID,
                        dEpisodeTalent,
                        dTalent});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutTalent(string strSessionID, System.Data.DataSet dEpisodeTalent, System.Data.DataSet dTalent, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutTalent", new object[] {
                        strSessionID,
                        dEpisodeTalent,
                        dTalent}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutTalent(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutTalentAsync(string strSessionID, System.Data.DataSet dEpisodeTalent, System.Data.DataSet dTalent) {
            this.PutTalentAsync(strSessionID, dEpisodeTalent, dTalent, null);
        }
        
        /// <remarks/>
        public void PutTalentAsync(string strSessionID, System.Data.DataSet dEpisodeTalent, System.Data.DataSet dTalent, object userState) {
            if ((this.PutTalentOperationCompleted == null)) {
                this.PutTalentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutTalentOperationCompleted);
            }
            this.InvokeAsync("PutTalent", new object[] {
                        strSessionID,
                        dEpisodeTalent,
                        dTalent}, this.PutTalentOperationCompleted, userState);
        }
        
        private void OnPutTalentOperationCompleted(object arg) {
            if ((this.PutTalentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutTalentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/TalentSearch", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TalentSearch(string strSessionID, string sTalentName) {
            object[] results = this.Invoke("TalentSearch", new object[] {
                        strSessionID,
                        sTalentName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTalentSearch(string strSessionID, string sTalentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TalentSearch", new object[] {
                        strSessionID,
                        sTalentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndTalentSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TalentSearchAsync(string strSessionID, string sTalentName) {
            this.TalentSearchAsync(strSessionID, sTalentName, null);
        }
        
        /// <remarks/>
        public void TalentSearchAsync(string strSessionID, string sTalentName, object userState) {
            if ((this.TalentSearchOperationCompleted == null)) {
                this.TalentSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTalentSearchOperationCompleted);
            }
            this.InvokeAsync("TalentSearch", new object[] {
                        strSessionID,
                        sTalentName}, this.TalentSearchOperationCompleted, userState);
        }
        
        private void OnTalentSearchOperationCompleted(object arg) {
            if ((this.TalentSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TalentSearchCompleted(this, new TalentSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetFormatSheet", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFormatSheet(string strSessionID, int nFormatSheetID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetFormatSheet", new object[] {
                        strSessionID,
                        nFormatSheetID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFormatSheet(string strSessionID, int nFormatSheetID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFormatSheet", new object[] {
                        strSessionID,
                        nFormatSheetID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFormatSheet(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormatSheetAsync(string strSessionID, int nFormatSheetID, bool bLockFlag) {
            this.GetFormatSheetAsync(strSessionID, nFormatSheetID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetFormatSheetAsync(string strSessionID, int nFormatSheetID, bool bLockFlag, object userState) {
            if ((this.GetFormatSheetOperationCompleted == null)) {
                this.GetFormatSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormatSheetOperationCompleted);
            }
            this.InvokeAsync("GetFormatSheet", new object[] {
                        strSessionID,
                        nFormatSheetID,
                        bLockFlag}, this.GetFormatSheetOperationCompleted, userState);
        }
        
        private void OnGetFormatSheetOperationCompleted(object arg) {
            if ((this.GetFormatSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormatSheetCompleted(this, new GetFormatSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutFormatSheet", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutFormatSheet(string strSessionID, string strLockID, System.Data.DataSet dsFormatSheet) {
            this.Invoke("PutFormatSheet", new object[] {
                        strSessionID,
                        strLockID,
                        dsFormatSheet});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutFormatSheet(string strSessionID, string strLockID, System.Data.DataSet dsFormatSheet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutFormatSheet", new object[] {
                        strSessionID,
                        strLockID,
                        dsFormatSheet}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutFormatSheet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutFormatSheetAsync(string strSessionID, string strLockID, System.Data.DataSet dsFormatSheet) {
            this.PutFormatSheetAsync(strSessionID, strLockID, dsFormatSheet, null);
        }
        
        /// <remarks/>
        public void PutFormatSheetAsync(string strSessionID, string strLockID, System.Data.DataSet dsFormatSheet, object userState) {
            if ((this.PutFormatSheetOperationCompleted == null)) {
                this.PutFormatSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutFormatSheetOperationCompleted);
            }
            this.InvokeAsync("PutFormatSheet", new object[] {
                        strSessionID,
                        strLockID,
                        dsFormatSheet}, this.PutFormatSheetOperationCompleted, userState);
        }
        
        private void OnPutFormatSheetOperationCompleted(object arg) {
            if ((this.PutFormatSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutFormatSheetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/DeleteFormatSheet", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFormatSheet(string strSessionID, int nTabId, string strLockId) {
            this.Invoke("DeleteFormatSheet", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFormatSheet(string strSessionID, int nTabId, string strLockId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFormatSheet", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFormatSheet(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteFormatSheetAsync(string strSessionID, int nTabId, string strLockId) {
            this.DeleteFormatSheetAsync(strSessionID, nTabId, strLockId, null);
        }
        
        /// <remarks/>
        public void DeleteFormatSheetAsync(string strSessionID, int nTabId, string strLockId, object userState) {
            if ((this.DeleteFormatSheetOperationCompleted == null)) {
                this.DeleteFormatSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormatSheetOperationCompleted);
            }
            this.InvokeAsync("DeleteFormatSheet", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, this.DeleteFormatSheetOperationCompleted, userState);
        }
        
        private void OnDeleteFormatSheetOperationCompleted(object arg) {
            if ((this.DeleteFormatSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormatSheetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetMusicCue", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMusicCue(string strSessionID, int nMusicCueID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetMusicCue", new object[] {
                        strSessionID,
                        nMusicCueID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMusicCue(string strSessionID, int nMusicCueID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMusicCue", new object[] {
                        strSessionID,
                        nMusicCueID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMusicCue(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicCueAsync(string strSessionID, int nMusicCueID, bool bLockFlag) {
            this.GetMusicCueAsync(strSessionID, nMusicCueID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetMusicCueAsync(string strSessionID, int nMusicCueID, bool bLockFlag, object userState) {
            if ((this.GetMusicCueOperationCompleted == null)) {
                this.GetMusicCueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicCueOperationCompleted);
            }
            this.InvokeAsync("GetMusicCue", new object[] {
                        strSessionID,
                        nMusicCueID,
                        bLockFlag}, this.GetMusicCueOperationCompleted, userState);
        }
        
        private void OnGetMusicCueOperationCompleted(object arg) {
            if ((this.GetMusicCueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicCueCompleted(this, new GetMusicCueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutMusicCue", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutMusicCue(string strSessionID, string strLockID, System.Data.DataSet dsMusicCue) {
            this.Invoke("PutMusicCue", new object[] {
                        strSessionID,
                        strLockID,
                        dsMusicCue});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutMusicCue(string strSessionID, string strLockID, System.Data.DataSet dsMusicCue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutMusicCue", new object[] {
                        strSessionID,
                        strLockID,
                        dsMusicCue}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutMusicCue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutMusicCueAsync(string strSessionID, string strLockID, System.Data.DataSet dsMusicCue) {
            this.PutMusicCueAsync(strSessionID, strLockID, dsMusicCue, null);
        }
        
        /// <remarks/>
        public void PutMusicCueAsync(string strSessionID, string strLockID, System.Data.DataSet dsMusicCue, object userState) {
            if ((this.PutMusicCueOperationCompleted == null)) {
                this.PutMusicCueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutMusicCueOperationCompleted);
            }
            this.InvokeAsync("PutMusicCue", new object[] {
                        strSessionID,
                        strLockID,
                        dsMusicCue}, this.PutMusicCueOperationCompleted, userState);
        }
        
        private void OnPutMusicCueOperationCompleted(object arg) {
            if ((this.PutMusicCueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutMusicCueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/DeleteMusicCue", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMusicCue(string strSessionID, int nTabId, string strLockId) {
            this.Invoke("DeleteMusicCue", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteMusicCue(string strSessionID, int nTabId, string strLockId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteMusicCue", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteMusicCue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteMusicCueAsync(string strSessionID, int nTabId, string strLockId) {
            this.DeleteMusicCueAsync(strSessionID, nTabId, strLockId, null);
        }
        
        /// <remarks/>
        public void DeleteMusicCueAsync(string strSessionID, int nTabId, string strLockId, object userState) {
            if ((this.DeleteMusicCueOperationCompleted == null)) {
                this.DeleteMusicCueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMusicCueOperationCompleted);
            }
            this.InvokeAsync("DeleteMusicCue", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, this.DeleteMusicCueOperationCompleted, userState);
        }
        
        private void OnDeleteMusicCueOperationCompleted(object arg) {
            if ((this.DeleteMusicCueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMusicCueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/GetVisualArt", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVisualArt(string strSessionID, int nVisualArtID, bool bLockFlag, out string strLockID) {
            object[] results = this.Invoke("GetVisualArt", new object[] {
                        strSessionID,
                        nVisualArtID,
                        bLockFlag});
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVisualArt(string strSessionID, int nVisualArtID, bool bLockFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVisualArt", new object[] {
                        strSessionID,
                        nVisualArtID,
                        bLockFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetVisualArt(System.IAsyncResult asyncResult, out string strLockID) {
            object[] results = this.EndInvoke(asyncResult);
            strLockID = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVisualArtAsync(string strSessionID, int nVisualArtID, bool bLockFlag) {
            this.GetVisualArtAsync(strSessionID, nVisualArtID, bLockFlag, null);
        }
        
        /// <remarks/>
        public void GetVisualArtAsync(string strSessionID, int nVisualArtID, bool bLockFlag, object userState) {
            if ((this.GetVisualArtOperationCompleted == null)) {
                this.GetVisualArtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVisualArtOperationCompleted);
            }
            this.InvokeAsync("GetVisualArt", new object[] {
                        strSessionID,
                        nVisualArtID,
                        bLockFlag}, this.GetVisualArtOperationCompleted, userState);
        }
        
        private void OnGetVisualArtOperationCompleted(object arg) {
            if ((this.GetVisualArtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVisualArtCompleted(this, new GetVisualArtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/PutVisualArt", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutVisualArt(string strSessionID, string strLockID, System.Data.DataSet dsVisualArt) {
            this.Invoke("PutVisualArt", new object[] {
                        strSessionID,
                        strLockID,
                        dsVisualArt});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutVisualArt(string strSessionID, string strLockID, System.Data.DataSet dsVisualArt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutVisualArt", new object[] {
                        strSessionID,
                        strLockID,
                        dsVisualArt}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPutVisualArt(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PutVisualArtAsync(string strSessionID, string strLockID, System.Data.DataSet dsVisualArt) {
            this.PutVisualArtAsync(strSessionID, strLockID, dsVisualArt, null);
        }
        
        /// <remarks/>
        public void PutVisualArtAsync(string strSessionID, string strLockID, System.Data.DataSet dsVisualArt, object userState) {
            if ((this.PutVisualArtOperationCompleted == null)) {
                this.PutVisualArtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutVisualArtOperationCompleted);
            }
            this.InvokeAsync("PutVisualArt", new object[] {
                        strSessionID,
                        strLockID,
                        dsVisualArt}, this.PutVisualArtOperationCompleted, userState);
        }
        
        private void OnPutVisualArtOperationCompleted(object arg) {
            if ((this.PutVisualArtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutVisualArtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pbswebservice.broadviewsoftware.com/BVWebService/DeleteVisualArt", RequestNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", ResponseNamespace="http://pbswebservice.broadviewsoftware.com/BVWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteVisualArt(string strSessionID, int nTabId, string strLockId) {
            this.Invoke("DeleteVisualArt", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteVisualArt(string strSessionID, int nTabId, string strLockId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteVisualArt", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteVisualArt(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteVisualArtAsync(string strSessionID, int nTabId, string strLockId) {
            this.DeleteVisualArtAsync(strSessionID, nTabId, strLockId, null);
        }
        
        /// <remarks/>
        public void DeleteVisualArtAsync(string strSessionID, int nTabId, string strLockId, object userState) {
            if ((this.DeleteVisualArtOperationCompleted == null)) {
                this.DeleteVisualArtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVisualArtOperationCompleted);
            }
            this.InvokeAsync("DeleteVisualArt", new object[] {
                        strSessionID,
                        nTabId,
                        strLockId}, this.DeleteVisualArtOperationCompleted, userState);
        }
        
        private void OnDeleteVisualArtOperationCompleted(object arg) {
            if ((this.DeleteVisualArtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVisualArtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://pbswebservice.broadviewsoftware.com/BVWebService")]
    public partial class UserProfile : UserProfileBase {
        
        private string[] oOperatingGroupField;
        
        private short nOperatingUnitField;
        
        private short nUnitTypeField;
        
        private short nRoleField;
        
        private string sExternalEmailField;
        
        private string sPhoneNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("sCode")]
        public string[] oOperatingGroup {
            get {
                return this.oOperatingGroupField;
            }
            set {
                this.oOperatingGroupField = value;
            }
        }
        
        /// <remarks/>
        public short nOperatingUnit {
            get {
                return this.nOperatingUnitField;
            }
            set {
                this.nOperatingUnitField = value;
            }
        }
        
        /// <remarks/>
        public short nUnitType {
            get {
                return this.nUnitTypeField;
            }
            set {
                this.nUnitTypeField = value;
            }
        }
        
        /// <remarks/>
        public short nRole {
            get {
                return this.nRoleField;
            }
            set {
                this.nRoleField = value;
            }
        }
        
        /// <remarks/>
        public string sExternalEmail {
            get {
                return this.sExternalEmailField;
            }
            set {
                this.sExternalEmailField = value;
            }
        }
        
        /// <remarks/>
        public string sPhoneNumber {
            get {
                return this.sPhoneNumberField;
            }
            set {
                this.sPhoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserProfile))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://pbswebservice.broadviewsoftware.com/BVWebService")]
    public partial class UserProfileBase {
        
        private string sConnectIdField;
        
        private string sFirstNameField;
        
        private string sLastNameField;
        
        /// <remarks/>
        public string sConnectId {
            get {
                return this.sConnectIdField;
            }
            set {
                this.sConnectIdField = value;
            }
        }
        
        /// <remarks/>
        public string sFirstName {
            get {
                return this.sFirstNameField;
            }
            set {
                this.sFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string sLastName {
            get {
                return this.sLastNameField;
            }
            set {
                this.sLastNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://pbswebservice.broadviewsoftware.com/BVWebService")]
    public partial class Packages {
        
        private int formatAndTypeIDField;
        
        private int lengthField;
        
        private int vchipIDField;
        
        private short isVCHIPEmbeddedField;
        
        private short isEiQualifiedField;
        
        private short isEiEmbeddedField;
        
        /// <remarks/>
        public int FormatAndTypeID {
            get {
                return this.formatAndTypeIDField;
            }
            set {
                this.formatAndTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public int VchipID {
            get {
                return this.vchipIDField;
            }
            set {
                this.vchipIDField = value;
            }
        }
        
        /// <remarks/>
        public short IsVCHIPEmbedded {
            get {
                return this.isVCHIPEmbeddedField;
            }
            set {
                this.isVCHIPEmbeddedField = value;
            }
        }
        
        /// <remarks/>
        public short IsEiQualified {
            get {
                return this.isEiQualifiedField;
            }
            set {
                this.isEiQualifiedField = value;
            }
        }
        
        /// <remarks/>
        public short IsEiEmbedded {
            get {
                return this.isEiEmbeddedField;
            }
            set {
                this.isEiEmbeddedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://pbswebservice.broadviewsoftware.com/BVWebService")]
    public partial class SearchCriterion {
        
        private string searchFieldField;
        
        private string searchValueField;
        
        /// <remarks/>
        public string SearchField {
            get {
                return this.searchFieldField;
            }
            set {
                this.searchFieldField = value;
            }
        }
        
        /// <remarks/>
        public string SearchValue {
            get {
                return this.searchValueField;
            }
            set {
                this.searchValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOACCompletedEventHandler(object sender, GetOACCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOACCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOACCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutOACCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteOACCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetIWTCompletedEventHandler(object sender, GetIWTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIWTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIWTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutIWTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteIWTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUCCCompletedEventHandler(object sender, GetUCCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUCCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUCCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutUCCCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteUCCCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAdCopyCompletedEventHandler(object sender, GetAdCopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdCopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdCopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutAdCopyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutAdCopy1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackageCompletedEventHandler(object sender, GetPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFeatureMediaInventoryCompletedEventHandler(object sender, GetFeatureMediaInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeatureMediaInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeatureMediaInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutFeatureMediaInventoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediaInventoryRevisionCompletedEventHandler(object sender, GetMediaInventoryRevisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaInventoryRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaInventoryRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutMediaInventoryRevisionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAssetAppliesToRangeByTabCompletedEventHandler(object sender, GetAssetAppliesToRangeByTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetAppliesToRangeByTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssetAppliesToRangeByTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutAssetAppliesToRangeByTabCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackageAppliesToRangeByTabCompletedEventHandler(object sender, GetPackageAppliesToRangeByTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageAppliesToRangeByTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageAppliesToRangeByTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutPackageAppliesToRangeByTabCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListTabMapByDealCompletedEventHandler(object sender, ListTabMapByDealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListTabMapByDealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListTabMapByDealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListPAADeadlineCompletedEventHandler(object sender, ListPAADeadlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPAADeadlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListPAADeadlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListFormDeadlineCompletedEventHandler(object sender, ListFormDeadlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListFormDeadlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListFormDeadlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListMissingEpisodeFormDeadlineCompletedEventHandler(object sender, ListMissingEpisodeFormDeadlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMissingEpisodeFormDeadlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMissingEpisodeFormDeadlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListMissingVersionFormDeadlineCompletedEventHandler(object sender, ListMissingVersionFormDeadlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMissingVersionFormDeadlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMissingVersionFormDeadlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDiscrepancyProgramCompletedEventHandler(object sender, GetDiscrepancyProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiscrepancyProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiscrepancyProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sPackagenumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string sPackageTile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string sProgramTile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string sSeriesTile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string sProgramEpisodeTitle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dSchedDateTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public int nSchedDuration {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReleaseLockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetIDsCompletedEventHandler(object sender, GetIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OpenSessionCompletedEventHandler(object sender, OpenSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CloseSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DebugTimeOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDealCompletedEventHandler(object sender, GetDealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutDealCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateDealCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDealAllCompletedEventHandler(object sender, GetDealAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDealWithFundingCompletedEventHandler(object sender, GetDealWithFundingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealWithFundingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealWithFundingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutDealWithFundingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDealWithGeneralCompletedEventHandler(object sender, GetDealWithGeneralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealWithGeneralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealWithGeneralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutDealWithGeneralCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDealWithRightsCompletedEventHandler(object sender, GetDealWithRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealWithRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealWithRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutDealWithRightsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDealWithTechnicalCompletedEventHandler(object sender, GetDealWithTechnicalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealWithTechnicalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealWithTechnicalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutDealWithTechnicalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMasterDealCompletedEventHandler(object sender, GetMasterDealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterDealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterDealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateMediaInventoryRevisionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBarCodeCompletedEventHandler(object sender, GetBarCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DealSearchCompletedEventHandler(object sender, DealSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DealSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DealSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProgramSearchCompletedEventHandler(object sender, ProgramSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProgramSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProgramSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MasterDealSearchCompletedEventHandler(object sender, MasterDealSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterDealSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterDealSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MediaInventorySearchCompletedEventHandler(object sender, MediaInventorySearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaInventorySearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaInventorySearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TrafficItemSearchCompletedEventHandler(object sender, TrafficItemSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrafficItemSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TrafficItemSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AdCopySearchCompletedEventHandler(object sender, AdCopySearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdCopySearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdCopySearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateEpisodeSlateCompletedEventHandler(object sender, ValidateEpisodeSlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateEpisodeSlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateEpisodeSlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadBillToCompletedEventHandler(object sender, LoadBillToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadBillToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadBillToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadBillToContactCompletedEventHandler(object sender, LoadBillToContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadBillToContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadBillToContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadCaptionVendorCompletedEventHandler(object sender, LoadCaptionVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCaptionVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCaptionVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadCompanyCompletedEventHandler(object sender, LoadCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadContactTypeCompletedEventHandler(object sender, LoadContactTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadContactTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadContactTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadDisclaimerCompletedEventHandler(object sender, LoadDisclaimerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDisclaimerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDisclaimerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadDistributorsCompletedEventHandler(object sender, LoadDistributorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDistributorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDistributorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadFundersCompletedEventHandler(object sender, LoadFundersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFundersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFundersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadFunderTypeCompletedEventHandler(object sender, LoadFunderTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFunderTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFunderTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadGenreCompletedEventHandler(object sender, LoadGenreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadKeywordsCompletedEventHandler(object sender, LoadKeywordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadKeywordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadKeywordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadLanguageCompletedEventHandler(object sender, LoadLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadLocalUnderwritingCompletedEventHandler(object sender, LoadLocalUnderwritingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLocalUnderwritingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLocalUnderwritingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadPBSProgramTypeCompletedEventHandler(object sender, LoadPBSProgramTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPBSProgramTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPBSProgramTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadPlayRuleCompletedEventHandler(object sender, LoadPlayRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPlayRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPlayRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadProgramTypeCompletedEventHandler(object sender, LoadProgramTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProgramTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProgramTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadRatingCompletedEventHandler(object sender, LoadRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadSchoolRightsCompletedEventHandler(object sender, LoadSchoolRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSchoolRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSchoolRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadUplinksCompletedEventHandler(object sender, LoadUplinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadUplinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadUplinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadVersionFormatAndTypeCompletedEventHandler(object sender, LoadVersionFormatAndTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadVersionFormatAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadVersionFormatAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadAudioTypeCompletedEventHandler(object sender, LoadAudioTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAudioTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAudioTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadTalentRolesCompletedEventHandler(object sender, LoadTalentRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTalentRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTalentRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadSurroundSoundTypeCompletedEventHandler(object sender, LoadSurroundSoundTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSurroundSoundTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSurroundSoundTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadAspectRatioTypeCompletedEventHandler(object sender, LoadAspectRatioTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAspectRatioTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAspectRatioTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadAssetCategoryCompletedEventHandler(object sender, LoadAssetCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAssetCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAssetCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadHighDefTypeCompletedEventHandler(object sender, LoadHighDefTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadHighDefTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadHighDefTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadVideoFormatCompletedEventHandler(object sender, LoadVideoFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadVideoFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadVideoFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadMediaFeatureClassCompletedEventHandler(object sender, LoadMediaFeatureClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMediaFeatureClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMediaFeatureClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadCutItemTypeCompletedEventHandler(object sender, LoadCutItemTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCutItemTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCutItemTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadMediaFormatTypeCompletedEventHandler(object sender, LoadMediaFormatTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMediaFormatTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMediaFormatTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadMediaInventoryTypeCompletedEventHandler(object sender, LoadMediaInventoryTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMediaInventoryTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMediaInventoryTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadMediaStatusCompletedEventHandler(object sender, LoadMediaStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMediaStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMediaStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadMediaFeatureCompletedEventHandler(object sender, LoadMediaFeatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMediaFeatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMediaFeatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadPackageTypeCompletedEventHandler(object sender, LoadPackageTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPackageTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPackageTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadOacPreOfferDescriptionTypeCompletedEventHandler(object sender, LoadOacPreOfferDescriptionTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOacPreOfferDescriptionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOacPreOfferDescriptionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadOacPostOfferDescriptionTypeCompletedEventHandler(object sender, LoadOacPostOfferDescriptionTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOacPostOfferDescriptionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOacPostOfferDescriptionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadVChipValuesCompletedEventHandler(object sender, LoadVChipValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadVChipValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadVChipValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadAlliantContractModelsCompletedEventHandler(object sender, LoadAlliantContractModelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAlliantContractModelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAlliantContractModelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadStationsCompletedEventHandler(object sender, LoadStationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateProgramCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListProgramByDealCompletedEventHandler(object sender, ListProgramByDealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListProgramByDealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListProgramByDealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListProgramPackagesByProgramCompletedEventHandler(object sender, ListProgramPackagesByProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListProgramPackagesByProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListProgramPackagesByProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListDealsByMasterDealCompletedEventHandler(object sender, ListDealsByMasterDealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListDealsByMasterDealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListDealsByMasterDealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProgramDetailsCompletedEventHandler(object sender, GetProgramDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutProgramDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTalentCompletedEventHandler(object sender, GetTalentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTalentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTalentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dEpisodeTalent {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dTalent {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutTalentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TalentSearchCompletedEventHandler(object sender, TalentSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TalentSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TalentSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFormatSheetCompletedEventHandler(object sender, GetFormatSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormatSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormatSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutFormatSheetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteFormatSheetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMusicCueCompletedEventHandler(object sender, GetMusicCueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicCueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicCueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutMusicCueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteMusicCueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVisualArtCompletedEventHandler(object sender, GetVisualArtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVisualArtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVisualArtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strLockID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PutVisualArtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteVisualArtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591