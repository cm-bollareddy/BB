using System;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Xml;
using System.Xml.Xsl;
using System.IO;
using System.Globalization;
using Pbs.WebServices.Utility;

using TVSServer = OrionProxy;

namespace BVWebService
{
	/// <summary>
	/// <object>SearchClass: Implement the <object>Search web method.
	/// </summary>
	class <object>SearchClass
	{
		private const string FILE_SEARCH_XSLT = @"<object>Search.xslt";

		public <object>SearchClass()
		{
			//
			// TODO: Add constructor logic here
			//
		}

		public DataSet <object>Search(string strSessionID, string str<object>Name)
		{
			//
			// Construct the search input parameter for troubleshooting...
			//
			

			Tracer oTracer = new Tracer();
			oTracer.LogInfo("Entering <object>Search.\n searchParams=" + str<object>Name);

			if ( str<object>Name ==string.Empty)
			{
				throw new ServiceException(
				ServiceException.ExceptionCode.InvalidParameters,
				"Invalid Search Parameter " +str<object>Name ,str<object>Name ,
				ServiceException.ExceptionActor.Client);
			}
			

			//
			// Go ahead and search based upon given parameters
			//
			TVSServer.rdmPBS<interface> oPBS<interface>;

			try
			{
				oPBSTalent = ComponentFactory.CreateTalentClass();
			}
			catch (Exception ex)
			{
				throw new BVException(
					BVException.ExceptionCode.ComponentAccessFailure,
					"Error while creating server component: " + ex.Message,
					"Component= TVSServer.rdmPBS<interface> <object>Search \nCriteria(" + str<object>Name + ")",
					ex);
			}

			int nErrorCode = 0;
			string strErrorText = "";
			string strResult = string.Empty;
			try
			{
				nErrorCode = oPBS<interface>.<object>Search(strSessionID, str<object>Name, out strResult, out strErrorText);
			}
			catch (Exception ex)
			{
				throw new BVException(
					BVException.ExceptionCode.ComponentExecutionFailure,
					"Error while executing server component method: " + ex.Message,
					"SessionID= " + strSessionID + ", Criteria(" + str<object>Name + ")",
					ex);
			}

			if (nErrorCode == 0)
			{
				return SchemaConverter.ToDataSet(strResult, BVWebService.ApplicationPath + @"\xslt\" + FILE_SEARCH_XSLT);
			}
			else
			{
				throw new BVException(nErrorCode, strErrorText, "SessionID= " + strSessionID + ", Criteria(" + str<object>Name + ")");
			}
		}
	}
}
