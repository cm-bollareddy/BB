using System;
using System.Data;
using System.IO;
using System.Xml;
using System.Text;
using BVWebService;
using TVSServer = OrionProxy;

namespace CreateSchema
{
	/// <summary>
	/// Summary description for GetData.
	/// </summary>
	public class <GetMethodName>
	{
		public <GetMethodName>()
		{
			//
			// TODO: Add constructor logic here
			//
		}

		public void GenSchema(string strTargetDir)
		{
			#region BroadView Schema Generation
			string strSessionID = "";
			int nErrorCode = 0;
			string strErrorText = "";
			string XmlString = "";
			string strLockID = "";

			//
			// Start a BroadView session
			//
			BVSession s = new BVSession();
			strSessionID = s.Login();

			//
			// Generate the BroadView Schema
			//
			rdmPBS<object>Class p = ComponentFactory.Create<object>Class();

			// Invoke the object to get the XML result string
			nErrorCode = p.<GetMethodName>(strSessionID, 6197186, false, out strLockID, out XmlString, out strErrorText);


			//
			// End our session
			//
			s.Logout(strSessionID);


			//  Load this into an XML document
			XmlDocument XmlDocument = new XmlDocument();
			XmlDocument.LoadXml(XmlString);

			// Create an XmlTextWriter and save it out
			XmlTextWriter XmlWriter = new XmlTextWriter(strTargetDir + @"\BVSchema\<PutMethodName>.xml", System.Text.Encoding.UTF8);
			XmlDocument.WriteTo(XmlWriter);
			XmlWriter.Flush();
			XmlWriter.Close();
			#endregion BroadView Schema Generation

			#region ORION Schema Generation
			//
			// Generate the ORION Schema
			//
			<TargetSchema>
			#endregion ORION Schema Generation

			#region <GetMethodName>.xslt Generation
			GenGetXsltHelper.GenXslTransform(strTargetDir + @"\xslt\<GetMethodName>.xslt", oDataSet);
			#endregion 

			#region <PutMethodName>.xslt Generation
			GenPutXsltHelper.GenXslTransform(strTargetDir + @"\xslt\<PutMethodName>.xslt", XmlDocument, oDataSet);
			#endregion


			#region <GetMethodName>.cs Generation
			GenGetClassHelper.GenClass(strTargetDir + @"\..\Templates\GetClassTemplate.cs.txt", strTargetDir + @"\xsltClass\<GetMethodName>Class.cs", "<MethodName>");
			#endregion

			#region <PutMethodName>.cs Generation
			GenSetClassHelper.GenClass(strTargetDir + @"\..\Templates\SetClassTemplate.cs.txt", strTargetDir + @"\xsltClass\<PutMethodName>Class.cs", "<MethodName>");
			#endregion
		}
	}
}
